[{"/Users/zakariasalogo/Desktop/online_shopping_client/src/index.js":"1","/Users/zakariasalogo/Desktop/online_shopping_client/src/App.js":"2","/Users/zakariasalogo/Desktop/online_shopping_client/src/Routes.js":"3","/Users/zakariasalogo/Desktop/online_shopping_client/src/user/Signup.js":"4","/Users/zakariasalogo/Desktop/online_shopping_client/src/user/Signin.js":"5","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Home.js":"6","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Menu.js":"7","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Layout.js":"8","/Users/zakariasalogo/Desktop/online_shopping_client/src/config.js":"9","/Users/zakariasalogo/Desktop/online_shopping_client/src/auth/index.js":"10","/Users/zakariasalogo/Desktop/online_shopping_client/src/user/UserDashboard.js":"11","/Users/zakariasalogo/Desktop/online_shopping_client/src/auth/PrivateRoute.js":"12","/Users/zakariasalogo/Desktop/online_shopping_client/src/auth/AdminRoute.js":"13","/Users/zakariasalogo/Desktop/online_shopping_client/src/user/AdminDashboard.js":"14","/Users/zakariasalogo/Desktop/online_shopping_client/src/admin/AddCategory.js":"15","/Users/zakariasalogo/Desktop/online_shopping_client/src/admin/apiAdmin.js":"16","/Users/zakariasalogo/Desktop/online_shopping_client/src/admin/AddProduct.js":"17","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/apiCore.js":"18","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Card.js":"19","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/ShowImage.js":"20","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Shop.js":"21","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Checkbox.js":"22","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/fixedPrices.js":"23","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/RadioBox.js":"24","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Search.js":"25","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Product.js":"26","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/cartHelpers.js":"27","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Scroll.js":"28","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Cart.js":"29","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Checkout.js":"30","/Users/zakariasalogo/Desktop/online_shopping_client/src/admin/Orders.js":"31","/Users/zakariasalogo/Desktop/online_shopping_client/src/user/Profile.js":"32","/Users/zakariasalogo/Desktop/online_shopping_client/src/user/apiUser.js":"33","/Users/zakariasalogo/Desktop/online_shopping_client/src/admin/ManageProducts.js":"34","/Users/zakariasalogo/Desktop/online_shopping_client/src/admin/UpdateProduct.js":"35","/Users/zakariasalogo/Desktop/online_shopping_client/src/admin/ManageCategories.js":"36","/Users/zakariasalogo/Desktop/online_shopping_client/src/admin/UpdateCategory.js":"37"},{"size":158,"mtime":1608253895876,"results":"38","hashOfConfig":"39"},{"size":99,"mtime":1608164709135,"results":"40","hashOfConfig":"39"},{"size":2335,"mtime":1612841941646,"results":"41","hashOfConfig":"39"},{"size":2358,"mtime":1608665360974,"results":"42","hashOfConfig":"39"},{"size":5287,"mtime":1613189709694,"results":"43","hashOfConfig":"39"},{"size":2416,"mtime":1618728017424,"results":"44","hashOfConfig":"39"},{"size":3664,"mtime":1612406895468,"results":"45","hashOfConfig":"39"},{"size":388,"mtime":1611052810026,"results":"46","hashOfConfig":"39"},{"size":49,"mtime":1608356394947,"results":"47","hashOfConfig":"39"},{"size":1924,"mtime":1612956971439,"results":"48","hashOfConfig":"39"},{"size":3765,"mtime":1612497584934,"results":"49","hashOfConfig":"39"},{"size":603,"mtime":1608832852603,"results":"50","hashOfConfig":"39"},{"size":636,"mtime":1609108601434,"results":"51","hashOfConfig":"39"},{"size":2527,"mtime":1612777645279,"results":"52","hashOfConfig":"39"},{"size":2486,"mtime":1609112826141,"results":"53","hashOfConfig":"39"},{"size":4463,"mtime":1612850226214,"results":"54","hashOfConfig":"39"},{"size":5677,"mtime":1609464405991,"results":"55","hashOfConfig":"39"},{"size":3731,"mtime":1613378610852,"results":"56","hashOfConfig":"39"},{"size":5156,"mtime":1611468935029,"results":"57","hashOfConfig":"39"},{"size":346,"mtime":1609568548434,"results":"58","hashOfConfig":"39"},{"size":4682,"mtime":1612483667139,"results":"59","hashOfConfig":"39"},{"size":1162,"mtime":1609923808242,"results":"60","hashOfConfig":"39"},{"size":499,"mtime":1610262041366,"results":"61","hashOfConfig":"39"},{"size":674,"mtime":1610019210433,"results":"62","hashOfConfig":"39"},{"size":4248,"mtime":1612775719596,"results":"63","hashOfConfig":"39"},{"size":6042,"mtime":1613384257997,"results":"64","hashOfConfig":"39"},{"size":2616,"mtime":1611621984720,"results":"65","hashOfConfig":"39"},{"size":220,"mtime":1610883057741,"results":"66","hashOfConfig":"39"},{"size":1604,"mtime":1612473642698,"results":"67","hashOfConfig":"39"},{"size":5998,"mtime":1611650510890,"results":"68","hashOfConfig":"39"},{"size":6012,"mtime":1612138462910,"results":"69","hashOfConfig":"39"},{"size":2978,"mtime":1613117428702,"results":"70","hashOfConfig":"39"},{"size":1608,"mtime":1612261357571,"results":"71","hashOfConfig":"39"},{"size":3495,"mtime":1612388999275,"results":"72","hashOfConfig":"39"},{"size":6605,"mtime":1612844826670,"results":"73","hashOfConfig":"39"},{"size":3933,"mtime":1612841843752,"results":"74","hashOfConfig":"39"},{"size":3648,"mtime":1612850758691,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"1ww72qn",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"78"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"78"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"78"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"78"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"78"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"78"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"78"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"78"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"78"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"78"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"78"},"/Users/zakariasalogo/Desktop/online_shopping_client/src/index.js",[],["162","163"],"/Users/zakariasalogo/Desktop/online_shopping_client/src/App.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/Routes.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/user/Signup.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/user/Signin.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Home.js",["164"],"/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Menu.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Layout.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/config.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/auth/index.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/user/UserDashboard.js",["165"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth/index\";\nimport { Link } from \"react-router-dom\";\nimport { getPurchaseHistory } from \"./apiUser\";\nimport moment from \"moment\";\n\nconst Dashboard = () => {\n    const [history, setHistory] = useState([])\n\n    const { user: { _id, name, email, rol } } = isAuthenticated();\n    const token = isAuthenticated().token;\n\n    const init = (userId, token) => {\n        getPurchaseHistory(userId, token).then(data => {\n            if (data.error) {\n                console.log(data.error)\n            } else {\n                setHistory(data)\n            }\n        })\n    }\n\n    useEffect(() => {\n        init(_id, token)\n    }, [])\n\n    const userLinks = () => {\n        return (\n            <div className=\"card\">\n                <h4 className=\"card-header\">User links</h4>\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item\">\n                        <Link className=\"nav-link\" to=\"/cart\">My Cart</Link>\n                    </li>\n\n                    <li className=\"list-group-item\">\n                        <Link className=\"nav-link\" to={`/profile/${_id}`}>\n                            Update Profile\n                      </Link>\n                    </li>\n                </ul>\n            </div>\n        )\n    }\n\n    const userInfo = () => {\n        return (\n            <div className=\"card mb-5\">\n                <h3 className=\"card-header\">User Profile</h3>\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item\">{name}</li>\n                    <li className=\"list-group-item\">{email}</li>\n                    <li className=\"list-group-item\">{rol === 1 ? \"Admin\" : \"Registered User\"}</li>\n                </ul>\n            </div>\n        )\n    }\n\n    const purchaseHistory = history => {\n        return (\n            <div className=\"card mb-5\">\n                <h3 className=\"card-header\">Purchase history</h3>\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item\">\n                        {history.map((h, i) => {\n                            return (\n                                <div>\n                                    <hr />\n                                    {h.products.map((p, i) => {\n                                        return (\n                                            <div key={i}>\n                                                <h6>Product name: {p.name}</h6>\n                                                <h6>Product price: ${p.price}</h6>\n                                                <h6>\n                                                    Purchased date:{\" \"}\n                                                    {moment(p.createdAt).fromNow()}\n                                                </h6>\n                                            </div>\n                                        );\n                                    })}\n                                </div>\n                            );\n                        })}\n                    </li>\n                </ul>\n            </div>\n        );\n    };\n\n    return (\n        <Layout title=\"Dashboard\" description={`Hello ${name}`} className=\"container-fluid  \">\n            <div className=\"row d-flex justify-content-center  text-primary\">\n                <div className=\"col-4\">\n                    {userInfo()}\n                </div>\n                <div className=\"col-4\">\n                    {userLinks()}\n                </div>\n                <div className=\"col-4\">\n                    {purchaseHistory(history)}\n                </div>\n            </div>\n\n\n        </Layout>\n    );\n};\nexport default Dashboard;","/Users/zakariasalogo/Desktop/online_shopping_client/src/auth/PrivateRoute.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/auth/AdminRoute.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/user/AdminDashboard.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/admin/AddCategory.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/admin/apiAdmin.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/admin/AddProduct.js",["166","167","168","169"],"import React, { useState, useEffect } from 'react';\nimport Layout from '../core/Layout';\nimport { isAuthenticated } from '../auth';\nimport { Link } from 'react-router-dom';\nimport { createProduct, getCategories } from './apiAdmin';\n\nconst AddProduct = () => {\n    const [values, setValues] = useState({\n        name: '',\n        description: '',\n        price: '',\n        categories: [],\n        category: '',\n        shipping: '',\n        quantity: '',\n        photo: '',\n        loading: false,\n        error: '',\n        createdProduct: '',\n        redirectToProfile: false,\n        formData: ''\n    });\n\n    const { user, token } = isAuthenticated();\n    const {\n        name,\n        description,\n        price,\n       categories,\n        category,\n        shipping,\n        quantity,\n        loading,\n        error,\n        createdProduct,\n        redirectToProfile,\n        formData\n    } = values;\n\n    // load categories and set form data\n    const init = () => {\n        getCategories().then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                setValues({\n                    ...values,\n                    categories: data,\n                    formData: new FormData()\n                });\n            }\n        });\n    };\n\n    useEffect(() => {\n        init();\n    },[])\n\n    const handleChange = name => event => {\n        const value = name === 'photo' ? event.target.files[0] : event.target.value;\n        formData.set(name, value);\n        setValues({ ...values, [name]: value });\n    };\n\n    const clickSubmit = event => {\n        event.preventDefault();\n        setValues({ ...values, error: '', loading: true });\n\n        createProduct(user._id, token, formData).then(data => {\n            if (data.error) {\n                 setValues({ ...values, error: data.error });\n            } else {\n                   setValues({\n                    ...values,\n                    name: '',\n                    description: '',\n                    photo: '',\n                    price: '',\n                    quantity: '',\n                    loading: false,\n                    createdProduct: data.name\n                });\n            }\n        });\n    };\n\n    const newPostForm = () => (\n        <form className=\"mb-3\" onSubmit={clickSubmit}>\n            <h4>Post Photo</h4>\n            <div className=\"form-group\">\n                <label className=\"btn btn-secondary\">\n                    <input onChange={handleChange('photo')} type=\"file\" name=\"photo\" accept=\"image/*\" />\n                </label>\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Name</label>\n                <input onChange={handleChange('name')} type=\"text\" className=\"form-control\" value={name} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Description</label>\n                <textarea onChange={handleChange('description')} className=\"form-control\" value={description} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Price</label>\n                <input onChange={handleChange('price')} type=\"number\" className=\"form-control\" value={price} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Category</label>\n                <select onChange={handleChange('category')} className=\"form-control\">\n                    <option>Please select </option>\n                     {categories && categories.map((c,i)=>(\n                         <option key={i} value={c._id} >{c.name}</option>\n                     ))}\n                    \n                </select>\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Shipping</label>\n                <select onChange={handleChange('shipping')} className=\"form-control\">\n                    <option>Please select</option>\n                    <option value=\"0\">No</option>\n                    <option value=\"1\">Yes</option>\n                </select>\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Quantity</label>\n                <input onChange={handleChange('quantity')} type=\"number\" className=\"form-control\" value={quantity} />\n            </div>\n\n            <button className=\"btn btn-outline-primary\">Create Product</button>\n        </form>\n    );\n\n    const goBack = () => (\n        <div className=\"mt-5\">\n             <Link to=\"/admin/dashboard\" className=\"text-warning\">Back to Dashboard</Link>\n        </div>\n    );\n\n    const showError = () => (\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\n            {error}\n        </div>\n    );\n\n    const showSuccess = () => (\n        <div className=\"alert alert-info\" style={{ display: createdProduct ? '' : 'none' }}>\n            <h2>{`${createdProduct}`} is created!</h2>\n        </div>\n    );\n\n    const showLoading = () =>\n        loading && (\n            <div className=\"alert alert-success\">\n                <h2>Loading...</h2>\n            </div>\n        );\n\n    return (\n        <Layout title=\"Add a new product\" description={`Hello ${user.name}`}>\n            <div className=\"row\">\n                <div className=\"col-md-8 offset-md-2\">\n                    {showLoading()}\n                    {showSuccess()}\n                    {showError()}\n                    {newPostForm()}\n                    {goBack()}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default AddProduct;\n","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/apiCore.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Card.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/core/ShowImage.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Shop.js",["170","171","172","173"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"./Layout\";\nimport Card from \"./Card\";\nimport { getCategories, getFilteredProducts } from \"./apiCore\";\nimport Checkbox from \"./Checkbox\";\nimport RadioBox from \"./RadioBox\";\nimport { prices } from \"./fixedPrices\";\nimport Scroll from \"./Scroll\";\n\n\n\nconst Shop = () => {\n    const [myFilters, setMyFilters] = useState({\n        filters: { category: [], price: [] }\n    });\n    const [categories, setCategories] = useState([]);\n    const [error, setError] = useState(false);\n    const [limit, setLimit] = useState(6);\n    const [skip, setSkip] = useState(0);\n    const [size, setSize] = useState(0);\n    const [filteredResults, setFilteredResults] = useState([]);\n\n    const init = () => {\n        getCategories().then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setCategories(data);\n            }\n        });\n    };\n\n    const loadFilteredResults = newFilters => {\n        // console.log(newFilters);\n        getFilteredProducts(skip, limit, newFilters).then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setFilteredResults(data.data);\n                setSize(data.size);\n                setSkip(0);\n            }\n        });\n    };\n\n    const loadMore = () => {\n        let toSkip = skip + limit;\n        // console.log(newFilters);\n        getFilteredProducts(toSkip, limit, myFilters.filters).then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setFilteredResults([...filteredResults, ...data.data]);\n                setSize(data.size);\n                setSkip(toSkip);\n            }\n        });\n    };\n\n\n    const loadMoreButton = () => {\n        return (\n            size > 0 && size >= limit && (\n                <button onClick={loadMore} className=\"btn btn-warning mb-5\">\n                    Load more\n                </button>\n            )\n        )\n    };\n\n\n    useEffect(() => {\n        init();\n        loadFilteredResults(skip, limit, myFilters.filters);\n    }, []);\n\n    const handleFilters = (filters, filterBy) => {\n        // console.log(\"SHOP\", filters, filterBy);\n        const newFilters = { ...myFilters };\n        newFilters.filters[filterBy] = filters;\n\n        if (filterBy === \"price\") {\n            let priceValues = handlePrice(filters);\n            newFilters.filters[filterBy] = priceValues;\n        }\n        loadFilteredResults(myFilters.filters);\n        setMyFilters(newFilters);\n    };\n\n    const handlePrice = value => {\n        const data = prices;\n        let array = [];\n\n        for (let key in data) {\n            if (data[key]._id === parseInt(value)) {\n                array = data[key].array;\n            }\n        }\n        return array;\n    };\n\n    return (\n        \n        <Layout\n            title=\"\"\n            description=\"\"\n            className=\"container-fluid text-primary\"\n        >\n        \n        \n        \n            <div className=\"row\">\n                <div className=\"col-4 border border-primary \">\n                    <h4 className=\"text-info\">Filter by categories</h4>\n                    <ul className=\"border border-primary \">\n                    \n                        <Checkbox\n                            categories={categories}\n                            handleFilters={filters =>\n                                handleFilters(filters, \"category\")\n                            }\n                        />                  \n                    </ul>\n\n                    <h4 className=\"text-info\">Filter by price range</h4>\n                    <div className=\"border border-primary \">\n                        <RadioBox\n                            prices={prices}\n                            handleFilters={filters =>\n                                handleFilters(filters, \"price\")\n                            }\n                        />\n\n                    </div>\n                </div>                    \n\n                <div className=\"col-8 border border-primary \">\n                    <h2 className=\"mb-4 text-primary\">Products</h2>\n                    <div className=\"row\">\n                        {filteredResults.map((product, i) => (\n                            <div key={i} className=\"col-6 mb-3\">\n                                <Card product={product} />\n                            </div>\n                        ))}\n                    </div>\n                    <hr />\n                    {loadMoreButton()}\n\n                </div>\n            </div>\n        \n        </Layout>\n    \n    );\n};\n\nexport default Shop;","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Checkbox.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/core/fixedPrices.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/core/RadioBox.js",["174"],"//import { Fragment } from \"react\";\nimport React, { useState,/* useEffect */} from \"react\";\n\n\nconst RadioBox = ({ prices, handleFilters }) => {\n     const [ value, setValue ] = useState(0);\n      \n     const handleChange = (event) => {\n         handleFilters(event.target.value)\n         setValue(event.target.value)\n     };\n\n     return prices.map((p, i) => (\n        <div  key={i}>\n            <input onChange={handleChange} \n            value={`${p._id}`} \n            name={p}\n            type=\"radio\"\n             className=\"mr-2 ml-4\" \n             />\n            <label className=\"form-check-label\">{p.name}</label>\n        </div>\n    ));\n};\n\nexport default RadioBox;","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Search.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Product.js",["175","176","177","178","179","180"],"import React, { useState, useEffect, Fragment } from \"react\";\nimport Layout from \"./Layout\";\nimport { read, listRelated, createReview, readReview } from \"./apiCore\";\nimport Card from \"./Card\";\nimport { isAuthenticated } from \"../auth/index\";\n\n\nconst Product = (props) => {\n    const [product, setProduct] = useState({});\n    const [relatedProduct, setRelatedProduct] = useState([]);\n    const [error, setError] = useState(false);\n    const [hoverRating, setHoverRating] = React.useState(0);\n    const [getreviews, setGetreviews] = useState([]);\n\n    const [comment, setComment] = useState(\"\");\n    const [rating, setRating] = useState(0);\n    const { user: {  name } } = isAuthenticated();\n    const token = isAuthenticated().token;\n    \n   // const [nameValue, setnameValue] = useState({ nameValue: name })\n\n    const loadSingleProduct = productId => {\n        read(productId).then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setProduct(data);\n                // fetch related products\n                listRelated(data._id).then(data => {\n                    if (data.error) {\n                        setError(data.error)\n                    } else {\n                        setRelatedProduct(data);\n                    }\n                })\n            }\n        })\n    }\n\n    // Reviews\n    function StarIcon(props) {\n        const { fill = 'none' } = props;\n        return (\n            <div style={{\n                height: \"100vh\", margin: \"0\", display: \" grid\",\n                width: \"1.5em\", height: \"1.5em\"\n\n            }}>\n                <div style={{}}>\n                    <svg class=\"w-6 h-6\"\n                        fill={fill} stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z\"></path></svg>\n                </div>\n\n            </div>\n        );\n    }\n\n    function RatingIcon(props) {\n        const { index, rating, hoverRating, onMouseEnter, onMouseLeave, onSaveRating, } = props;\n        const fill = React.useMemo(() => {\n            if (hoverRating >= index) {\n                return 'yellow';\n            } else if (!hoverRating && rating >= index) {\n                return 'yellow';\n            }\n            return 'none';\n        }, [rating, hoverRating, index]);\n        return (\n            <div className=\"cursor-pointer\" style={{ cursor: \"pointer\" }} onMouseEnter={() => onMouseEnter(index)} onMouseLeave={() => onMouseLeave()} onClick={() => onSaveRating(index)}>\n                <StarIcon fill={fill} />\n            </div>\n        )\n    }\n\n    const onMouseEnter = (index) => {\n        setHoverRating(index);\n    };\n    const onMouseLeave = () => {\n        setHoverRating(0);\n    };\n    const onSaveRating = (index) => {\n        setRating(index);\n    };\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        const productId = props.match.params.productId\n\n        setComment({ ...comment, comment: e.target.comment })\n        setRating({ ...rating, rating: rating }) \n  \n       const review = { rating, comment, name }\n       console.log(\"review\", review)\n        createReview(productId, review)\n  /*   .then(data => {\n           if (data.error) {\n                console.log(\"ERROR...\",data.error)\n            }  \n        })   */\n    };\n\n    const commentInput = () => {\n        return (\n            <form >\n                <Fragment>\n                    <div>\n                        <label htmlFor=\"comment\">Comment..</label>\n                        <textarea id=\"comment\" onChange={(e) => setComment(e.target.value)}></textarea>\n                    </div>\n                    <div>\n                        <label />\n                        <button onClick={submitHandler} className=\"primary\" type=\"submit\">\n                            Submit\n        </button>\n                    </div>\n                </Fragment>\n            </form>\n        )\n    }\n\n    useEffect(() => {\n        const productId = props.match.params.productId // from the URL\n        loadSingleProduct(productId)\n        setRating('');\n        setComment('');\n    }, [props])// [props] mean anytime there a change useEffect will update the state\n\n    return (\n        <Layout title={product && product.name} description={product && product.description && product.description.substring(0, 100)} className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col-8\">\n                    {product && product.description && (\n                        <Card product={product} showViewProductButton={false} />\n                    )}\n\n                    <Fragment>\n                        <div className=\"box flex \" style={{ display: \"flex\", width: \"22px\", height: \"5px\" }} >\n                            {[1, 2, 3, 4, 5].map((index) => {\n                                return (\n                                    <RatingIcon index={index} rating={rating} hoverRating={hoverRating} onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave} onSaveRating={onSaveRating} />\n                                )\n                            })}\n                        </div> <br />\n\n                        {commentInput()}\n                    </Fragment>\n\n                </div>\n\n                <div className=\"col-4\">\n                    <h4>Related products</h4>\n                    {relatedProduct.map((p, i) => (\n                        <div className=\"mb-3\">\n                            <Card key={i} product={p} />\n                        </div>\n                    ))}\n                </div>\n\n            </div>\n\n        </Layout>\n    )\n}\n\nexport default Product;","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/cartHelpers.js",["181","182"],"export const addItem = (item = [], count = 0, next = f => f) => {\n    let cart = [];\n    if (typeof window !== 'undefined') {\n        if (localStorage.getItem('cart')) {\n            cart = JSON.parse(localStorage.getItem('cart'));\n        }\n        cart.push({\n            ...item,\n            count: 1\n        });\n\n        // remove duplicates\n        // build an Array from new Set and turn it back into array using Array.from\n        // so that later we can re-map it\n        // new set will only allow unique values in it\n        // so pass the ids of each object/product\n        // If the loop tries to add the same value again, it'll get ignored\n        // ...with the array of ids we got on when first map() was used\n        // run map() on it again and return the actual product from the cart\n\n        cart = Array.from(new Set(cart.map(p => p._id))).map(id => {\n            return cart.find(p => p._id === id);\n        });\n\n        localStorage.setItem('cart', JSON.stringify(cart));\n        next();\n    }\n};\n\nexport const itemTotal = () => {\n    if (typeof window !== \"undefined\") {\n        if (localStorage.getItem(\"cart\")) {\n            return JSON.parse(localStorage.getItem(\"cart\")).length;\n        }\n    }\n    return 0;\n};\n\nexport const getCart = () => {\n    if (typeof window !== \"undefined\") {\n        if (localStorage.getItem(\"cart\")) {\n            return JSON.parse(localStorage.getItem(\"cart\"));\n        }\n    }\n    return [];// if we don't get any item we return empty array\n};\n\n\nexport const updateItem = (productId, count) => {\n    let cart = [];\n    if (typeof window !== 'undefined') {\n        if (localStorage.getItem('cart')) {\n            cart = JSON.parse(localStorage.getItem('cart'));\n        }\n\n        cart.map((product, i) => {\n            if (product._id === productId) {\n                cart[i].count = count;\n            }\n        });\n\n        localStorage.setItem('cart', JSON.stringify(cart));\n    }\n};\n\n\nexport const removeItem = (productId) => {\n    let cart = [];\n    if (typeof window !== 'undefined') {\n        if (localStorage.getItem('cart')) {\n            cart = JSON.parse(localStorage.getItem('cart'));\n        }\n\n        cart.map((product, i) => {\n            if (product._id === productId) {\n                cart.splice(i, 1);// to remove 1 item off\n            }\n        });\n\n        localStorage.setItem('cart', JSON.stringify(cart));\n    }\n    return cart;\n};\n\nexport const emptyCart = next => {\n    if (typeof window !== 'undefined') {\n        localStorage.removeItem('cart');\n        window.location.reload(false);//to refrech the page\n        next();\n    }\n};","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Scroll.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Cart.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Checkout.js",["183","184","185","186"],"\nimport React, { useState, useEffect } from 'react';\nimport { getProducts, getBraintreeClientToken, processPayment, createOrder } from './apiCore';\nimport { emptyCart } from './cartHelpers';\nimport Card from './Card';\nimport { isAuthenticated } from '../auth';\nimport { Link } from 'react-router-dom';\nimport DropIn from 'braintree-web-drop-in-react';\n\nconst Checkout = ({ products, setRun = f => f, run = undefined }) => {\n    const [data, setData] = useState({\n        loading: false,\n        success: false,\n        clientToken: null,\n        error: '',\n        instance: {},\n        address: ''\n    });\n\n    const userId = isAuthenticated() && isAuthenticated().user._id;\n    const token = isAuthenticated() && isAuthenticated().token;\n\n    const getToken = (userId, token) => {\n        getBraintreeClientToken(userId, token).then(data => {\n            if (data.error) {\n                console.log(data.error);\n                setData({ ...data, error: data.error });\n            } else {\n                console.log(data);\n                setData({ clientToken: data.clientToken });\n            }\n        });\n    };\n\n    useEffect(() => {\n        getToken(userId, token);\n    }, []);\n\n    const handleAddress = event => {\n        setData({ ...data, address: event.target.value })\n    };\n\n    const getTotal = () => {\n        return products.reduce((currentValue, nextValue) => {\n            return currentValue + nextValue.count * nextValue.price;\n        }, 0);\n    };\n\n    const showCheckout = () => {\n        return isAuthenticated() ? (\n            <div>{showDropIn()}</div>\n        ) : (\n            <Link to=\"/signin\">\n                <button className=\"btn btn-primary\">Sign in to checkout</button>\n            </Link>\n        );\n    };\n\n  \n    let deliveryAddress = data.address;\n    const buy = () => {\n        setData({ loading: true });\n        // send the nonce to your server\n        // nonce = data.instance.requestPaymentMethod()\n        let nonce;\n        let getNonce = data.instance\n            .requestPaymentMethod()\n            .then(data => {\n                // console.log(data);\n                nonce = data.nonce;\n                // once you have nonce (card type, card number) send nonce as 'paymentMethodNonce'\n                // and also total to be charged\n                // console.log(\n                //     \"send nonce and total to process: \",\n                //     nonce,\n                //     getTotal(products)\n                // );\n                const paymentData = {\n                    paymentMethodNonce: nonce,\n                    amount: getTotal(products)\n                };\n\n                processPayment(userId, token, paymentData)\n                    .then(response => {\n                        console.log(\"this is payment process \",response);\n                        // empty cart\n                        // create order\n                        const createOrderData = {\n                            products: products,\n                            transaction_id: response.transaction.id,\n                            amount: response.transaction.amount,\n                            address: deliveryAddress\n                        };\n\n                        createOrder(userId, token, createOrderData)\n                            .then(response => {\n                                emptyCart(() => {\n                                    setRun(!run); // run useEffect in parent Cart\n                                    console.log('payment success and empty cart');\n                                    setData({\n                                        loading: false,\n                                        success: true\n                                        \n                                    });\n                                });\n                            })\n                         \n                    })\n                   \n            })\n            .catch(error => {\n                // console.log(\"dropin error: \", error);\n                setData({ ...data, error: error.message });\n            });\n    };\n\n    const showDropIn = () => (\n        <div onBlur={() => setData({ ...data, error: '' })}>\n            {data.clientToken !== null && products.length > 0 ? (\n                <div>\n                    <div className=\"gorm-group mb-3\">\n                        <label className=\"text-muted\">Delivery address:</label>\n                        <textarea\n                            onChange={handleAddress}\n                            className=\"form-control\"\n                            value={data.address}\n                            placeholder=\"Type your address here...\"\n                        />\n                    </div>\n\n                    <DropIn\n                        options={{\n                            authorization: data.clientToken,\n                            paypal: {\n                                flow: 'vault'\n                            }\n                        }}\n                        onInstance={instance => (data.instance = instance)}\n                    />\n                    <button onClick={buy} className=\"btn btn-success btn-block\">\n                        Pay\n                    </button>\n                </div>\n            ) : null}\n        </div>\n    );\n\n    const showError = error => (\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\n            {error}\n        </div>\n    );\n\n    const showSuccess = success => (\n        <div className=\"alert alert-info\" style={{ display: success ? '' : 'none' }}>\n            Thanks! Your payment was successful!\n        </div>\n    );\n\n    const showLoading = loading => loading && <h2 className=\"text-danger\">Loading...</h2>;\n\n    return (\n        <div>\n            <h2>Total: ${getTotal()}</h2>\n            {showLoading(data.loading)}\n            {showSuccess(data.success)}\n            {showError(data.error)}\n            {showCheckout()}\n        </div>\n    );\n};\n\nexport default Checkout;\n\n\n\n","/Users/zakariasalogo/Desktop/online_shopping_client/src/admin/Orders.js",["187"],"\nimport React, { useState, useEffect } from 'react';\nimport Layout from '../core/Layout';\nimport { isAuthenticated } from '../auth';\nimport { Link } from 'react-router-dom';\nimport { listOrders, getStatusValues, updateOrderStatus } from './apiAdmin';\nimport moment from \"moment\";\n\nconst Orders = () => {\n    const [orders, setOrders] = useState([])\n    const [statusValues, setStatusValues ] = useState([]);\n\n    const { user, token } = isAuthenticated()\n\n    const loadOrders = () => {\n        listOrders(user._id, token).then(data => {\n            if (data.error) {\n                console.log(data.error);\n            } else {\n                setOrders(data);\n            }\n        });\n    };\n\n    const loadStatusValues = () => {\n        getStatusValues(user._id, token).then(data => {\n            if (data.error) {\n                console.log(data.error);\n            } else {\n                setStatusValues(data);\n            }\n        });\n    };\n\n    useEffect(() => {\n        loadOrders();\n        loadStatusValues();\n    }, [])\n\n    const showOrdersLength = () => {\n        if (orders.length > 0) {\n            return (\n                <h1 className=\"text-danger display-2\">\n                    Total orders: {orders.length}\n                </h1>\n            );\n        } else {\n            return <h1 className=\"text-danger\">No orders</h1>\n        }\n    };\n\n    const showInput = (key, value) => (\n        <div className=\"input-group mb-2 mr-sm-2\">\n            <div className=\"input-group-prepend\">\n                <div className=\"input-group-text\">{key}</div>\n            </div>\n            <input\n                type=\"text\"\n                value={value}\n                className=\"form-control\"\n                readOnly\n            />\n        </div>\n    )\n\n    const goBack = () => (\n        <div className=\"mt-5\">\n            <Link to=\"/admin/dashboard\" className=\"text-warning\">Back to Dashboard</Link>\n        </div>\n    );\n\n    const handleStatusChange = (e, orderId) => {\n        updateOrderStatus(user._id, token, orderId, e.target.value).then(data => {\n            if (data.error) {\n                console.log(\"Status update failed\")\n            } else {\n                loadOrders()\n            }\n        })\n    }\n\n    const showStatus = (o) => (\n        <div className=\"form-group\">\n           <h3 className=\"mark mb-4\">Status: {o.status}</h3>\n           <select \n              className=\"form-control\" \n              onChange={(e) => (handleStatusChange(e, o._id))}\n              >\n               <option>Update Status</option>\n                  {statusValues.map((status, index) => (\n                      <option key={index} value={status}>\n                         {status}\n                      </option>\n                  ))}\n           </select>\n        </div>\n    )\n\n\n    return (\n        <Layout title=\"Ordres\" description={`Hello ${user.name}`} >\n\n            <div className=\"row\">\n                <div className=\"col-md-8 offset-md-2\">\n                    {showOrdersLength()}\n\n                    {orders.map((o, oindex) => {\n                        return (\n                            <div\n                                className=\"mt-5\"\n                                key={oindex}\n                                style={{ borderBottom: \"5px solid indigo\" }}>\n                                <h2 className=\"mb-5\">\n                                    <span className=\"bg-secondary\">\n                                        Order ID: {o._id}\n                                    </span>\n                                </h2>\n                                <ul className=\"list-group mb-2\">\n                                    <li className=\"list-group-item\">\n                                        {showStatus(o)}\n                                    </li>\n                                    <li className=\"list-group-item\">\n                                        Transaction ID:  {o.transaction_id}\n                                    </li>\n                                    <li className=\"list-group-item\">\n                                        Amount: ${o.amount}\n                                    </li>\n                                    <li className=\"list-group-item\">\n                                        Ordered by: {o.user.name}\n                                    </li>\n                                    <li className=\"list-group-item\">\n                                        Ordered on: {moment(o.createdAt).fromNow()}\n                                    </li>\n                                    <li className=\"list-group-item\">\n                                        Delivery address: {o.address}\n                                    </li>\n                                </ul>\n                                <h3 className=\"mt-4 mb-4 font-italic\">\n                                    Total products in the order: {o.products.length}\n                                </h3>\n\n                                {o.products.map((p, pIndex) => (\n                                    <div\n                                        className=\"mb-4\"\n                                        key={pIndex}\n                                        style={{\n                                            padding: \"20px\",\n                                            border: \"1px solid indigo\"\n                                        }}\n                                    >\n                                        {showInput(\"Product name\", p.name)}\n                                        {showInput(\"Product price\", p.price)}\n                                        {showInput(\"Product total\", p.count)}\n                                        {showInput(\"Product Id\", p._id)}\n                                    </div>\n                                ))}\n                            </div>\n                        );\n                    })}\n\n                    {goBack()}\n\n                </div>\n            </div>\n\n        </Layout>\n    )\n\n}\n\nexport default Orders;","/Users/zakariasalogo/Desktop/online_shopping_client/src/user/Profile.js",["188","189","190"],"\nimport React, { useState, useEffect } from \"react\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth/index\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { read, update, updateUser } from \"./apiUser\";\n\n\nconst Profile = ({ match }) => {\n    const [values, setValues] = useState({\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        error: false,\n        success: false\n    })\n\n    const { token } = isAuthenticated()\n    const { name, email, password, error, success } = values;\n\n\n    const init = (userId) => {\n        // console.log(userId)\n        read(userId, token).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: true })\n            } else {\n                setValues({ ...values, name: data.name, email: data.email })\n            }\n        })\n    };\n\n    useEffect(() => {\n        init(match.params.userId)\n    }, [])\n\n    const handleChange = name => e => {\n        setValues({...values, error: false, [name]: e.target.value});\n    };\n\n    const clickSubmit = (e) => {\n        e.preventDefault()\n        update(match.params.userId, token, {name, email, password}).then(data => {\n            if (data.error) {\n                console.log(data.error)\n            } else {\n                updateUser(data, () => {\n                    setValues({\n                        ...values,\n                        name: data.name,\n                        email: data.email,\n                        success: true\n                    });\n                });\n            }\n        })\n    };\n\n    const redirectUser = (success) => {\n        if (success) {\n            return <Redirect to=\"/cart\" />\n        }\n    }\n\n    \n    const profileUpdate = (name, email, password) => (\n        <form>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Name</label>\n                <input type=\"text\" onChange={handleChange('name')} className=\"form-control\" value={name} />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Email</label>\n                <input type=\"email\" onChange={handleChange('email')} className=\"form-control\" value={email} />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Password</label>\n                <input type=\"password\" onChange={handleChange('password')} className=\"form-control\" value={password} />\n            </div>\n\n            <button onClick={clickSubmit} className=\"btn btn-primary\">\n                Submit\n            </button>\n        </form>\n    );\n\n    return (\n        <Layout\n            title=\"Home Page\"\n            description=\"Update your profile\"\n            className=\"container-fluid\"\n        >\n     \n            <h2 className=\"mb-4\">Profile update</h2>\n            {profileUpdate(name, email, password)}\n            {redirectUser(success)}\n        </Layout>\n    )\n\n};\n\nexport default Profile;","/Users/zakariasalogo/Desktop/online_shopping_client/src/user/apiUser.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/admin/ManageProducts.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/admin/UpdateProduct.js",["191","192","193","194"],"import React, { useState, useEffect } from 'react';\nimport Layout from '../core/Layout';\nimport { isAuthenticated } from '../auth';\nimport { Link, Redirect } from 'react-router-dom';\nimport { getProduct, getCategories, updateProduct } from './apiAdmin';\n\nconst UpdateProduct = ({ match }) => {\n    const [values, setValues] = useState({\n        name: '',\n        description: '',\n        price: '',\n        categories: [],\n        category: '',\n        shipping: '',\n        quantity: '',\n        photo: '',\n        loading: false,\n        error: false,\n        createdProduct: '',\n        redirectToProfile: false,\n        formData: ''\n    });\n    const [categories, setCategories] = useState([]);\n\n    const { user, token } = isAuthenticated();\n    const {\n        name,\n        description,\n        price,\n        // categories,\n        category,\n        shipping,\n        quantity,\n        loading,\n        error,\n        createdProduct,\n        redirectToProfile,\n        formData\n    } = values;\n\n    const init = productId => {\n        getProduct(productId).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                // populate the state\n                setValues({\n                    ...values,\n                    name: data.name,\n                    description: data.description,\n                    price: data.price,\n                    category: data.category._id,\n                    shipping: data.shipping,\n                    quantity: data.quantity,\n                    formData: new FormData()\n                });\n                // load categories\n                initCategories();\n            }\n        });\n    };\n\n    // load categories and set form data\n    const initCategories = () => {\n        getCategories().then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                setCategories(data);\n            }\n        });\n    };\n\n    useEffect(() => {\n        init(match.params.productId);\n    }, []);\n\n    const handleChange = name => event => {\n        const value = name === 'photo' ? event.target.files[0] : event.target.value;\n        formData.set(name, value);\n        setValues({ ...values, [name]: value });\n    };\n\n    const clickSubmit = event => {\n        event.preventDefault();\n        setValues({ ...values, error: '', loading: true });\n\n        updateProduct(match.params.productId, user._id, token, formData).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                setValues({\n                    ...values,\n                    name: '',\n                    description: '',\n                    photo: '',\n                    price: '',\n                    quantity: '',\n                    loading: false,\n                    error: false,\n                    redirectToProfile: true,\n                    createdProduct: data.name\n                });\n            }\n        });\n    };\n\n    const newPostForm = () => (\n        <form className=\"mb-3\" onSubmit={clickSubmit}>\n            <h4>Post Photo</h4>\n            <div className=\"form-group\">\n                <label className=\"btn btn-secondary\">\n                    <input onChange={handleChange('photo')} type=\"file\" name=\"photo\" accept=\"image/*\" />\n                </label>\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Name</label>\n                <input onChange={handleChange('name')} type=\"text\" className=\"form-control\" value={name} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Description</label>\n                <textarea onChange={handleChange('description')} className=\"form-control\" value={description} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Price</label>\n                <input onChange={handleChange('price')} type=\"number\" className=\"form-control\" value={price} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Category</label>\n                <select onChange={handleChange('category')} className=\"form-control\">\n                    <option>Please select</option>\n                    {categories &&\n                        categories.map((c, i) => (\n                            <option key={i} value={c._id}>\n                                {c.name}\n                            </option>\n                        ))}\n                </select>\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Shipping</label>\n                <select onChange={handleChange('shipping')} className=\"form-control\">\n                    <option>Please select</option>\n                    <option value=\"0\">No</option>\n                    <option value=\"1\">Yes</option>\n                </select>\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Quantity</label>\n                <input onChange={handleChange('quantity')} type=\"number\" className=\"form-control\" value={quantity} />\n            </div>\n\n            <button className=\"btn btn-outline-primary\">Update Product</button>\n        </form>\n    );\n\n    const showError = () => (\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\n            {error}\n        </div>\n    );\n\n    const showSuccess = () => (\n        <div className=\"alert alert-info\" style={{ display: createdProduct ? '' : 'none' }}>\n            <h2>{`${createdProduct}`} is updated!</h2>\n        </div>\n    );\n\n    const showLoading = () =>\n        loading && (\n            <div className=\"alert alert-success\">\n                <h2>Loading...</h2>\n            </div>\n        );\n\n    const redirectUser = () => {\n        if (redirectToProfile) {\n            if (!error) {\n                return <Redirect to=\"/\" />;\n            }\n        }\n    };\n\n    return (\n        <Layout title=\"Add a new product\" description={`G'day ${user.name}, ready to add a new product?`}>\n            <div className=\"row\">\n                <div className=\"col-md-8 offset-md-2\">\n                    {showLoading()}\n                    {showSuccess()}\n                    {showError()}\n                    {newPostForm()}\n                    {redirectUser()}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default UpdateProduct;\n","/Users/zakariasalogo/Desktop/online_shopping_client/src/admin/ManageCategories.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/admin/UpdateCategory.js",["195"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth/index\";\nimport { Link } from \"react-router-dom\";\nimport { getCategories, UpdateCategor, getCategory, } from \"./apiAdmin\";\n\n\n\nconst UpdateCategory = ({match}) => {\n    const [values, setValues] = useState({ name: \"\"})\n  \n    const [error, setError] = useState(false)\n    const [success, setSuccess] = useState(false)\n\n    // destructure user and token from localstorage\n    const { name } = values\n    console.log(\"naaame\", name)\n    const { user, token } = isAuthenticated();\n\n    const init = categoryId => {\n        getCategory(categoryId).then(data => {\n            if (data.error) {\n                setValues({ ...name, error: data.error });\n            } else {\n                console.log(\"CI... Id\",categoryId)\n                // populate the state\n                setValues({\n                    ...name,\n                    name: data.name,\n                });\n                // load categories\n                initCategories();\n            }\n        });\n    };\n\n    const initCategories = () => {\n        getCategories().then(data => {\n            if (data.error) {\n                setValues({ ...name, error: data.error });\n            } else {\n                setValues(data);\n                console.log(\"dataaa\", data)\n            }\n        });\n    };\n\n    useEffect(() => {\n        init(match.params.categoryId);\n    }, []);\n\n     \n     const handleChange = name => event => {\n        const value =   event.target.value;\n        setValues({ ...name, name: value });\n    };\n\n    \n    const clickSubmit = (e) => {\n      \n        e.preventDefault()\n        setError(\"\")\n        setSuccess(false)\n        // then make the request to create the Category\n        UpdateCategor(match.params.productId, user._id, token, {name}).then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setValues({\n                    name: \"\"\n                })\n\n                setError(\"\");\n                setSuccess(true);\n            }\n        });\n    };\n\n    const newCategoryForm = () => (\n        <form onSubmit={clickSubmit}>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Name</label>\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    onChange={handleChange}\n                    value={name}\n                    autoFocus\n                    required\n                />\n\n            </div>\n             \n                <button className=\"btn btn-outline-primary\">\n                   Update Category\n                </button>\n        </form>\n    );\n\n    const showSuccess = () => {\n        if (success) {\n            return <h3 className=\"text-success\">{name} is created</h3>\n        }\n    }\n\n    const showError = () => {\n        if (error) {\n            return <h3 className=\"text-danger\">Category should be unique</h3>\n        }\n    }\n\n    const goBack = () => (\n        <div className=\"mt-5\">\n             <Link to=\"/admin/dashboard\" className=\"text-warning\">Back to Dashboard</Link>\n        </div>\n    );\n\n    return (\n        <Layout title=\"Create a Category\" description={`Hello ${user.name}`} >\n             \n            <div className=\"row\">\n                <div className=\"col-md-8 offset-md-2\">\n                   {newCategoryForm()}\n                   {showSuccess()}\n                   {showError()}\n                   {goBack()}\n                </div>\n            </div>\n\n        </Layout>\n    )\n\n\n}\nexport default UpdateCategory;",{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","severity":1,"message":"201","line":13,"column":12,"nodeType":"202","messageId":"203","endLine":13,"endColumn":17},{"ruleId":"204","severity":1,"message":"205","line":26,"column":8,"nodeType":"206","endLine":26,"endColumn":10,"suggestions":"207"},{"ruleId":"200","severity":1,"message":"208","line":30,"column":9,"nodeType":"202","messageId":"203","endLine":30,"endColumn":17},{"ruleId":"200","severity":1,"message":"209","line":31,"column":9,"nodeType":"202","messageId":"203","endLine":31,"endColumn":17},{"ruleId":"200","severity":1,"message":"210","line":36,"column":9,"nodeType":"202","messageId":"203","endLine":36,"endColumn":26},{"ruleId":"204","severity":1,"message":"211","line":57,"column":7,"nodeType":"206","endLine":57,"endColumn":9,"suggestions":"212"},{"ruleId":"200","severity":1,"message":"213","line":8,"column":8,"nodeType":"202","messageId":"203","endLine":8,"endColumn":14},{"ruleId":"200","severity":1,"message":"201","line":17,"column":12,"nodeType":"202","messageId":"203","endLine":17,"endColumn":17},{"ruleId":"200","severity":1,"message":"214","line":18,"column":19,"nodeType":"202","messageId":"203","endLine":18,"endColumn":27},{"ruleId":"204","severity":1,"message":"215","line":75,"column":8,"nodeType":"206","endLine":75,"endColumn":10,"suggestions":"216"},{"ruleId":"200","severity":1,"message":"217","line":6,"column":14,"nodeType":"202","messageId":"203","endLine":6,"endColumn":19},{"ruleId":"200","severity":1,"message":"218","line":3,"column":43,"nodeType":"202","messageId":"203","endLine":3,"endColumn":53},{"ruleId":"200","severity":1,"message":"201","line":11,"column":12,"nodeType":"202","messageId":"203","endLine":11,"endColumn":17},{"ruleId":"200","severity":1,"message":"219","line":13,"column":12,"nodeType":"202","messageId":"203","endLine":13,"endColumn":22},{"ruleId":"200","severity":1,"message":"220","line":13,"column":24,"nodeType":"202","messageId":"203","endLine":13,"endColumn":37},{"ruleId":"200","severity":1,"message":"221","line":18,"column":11,"nodeType":"202","messageId":"203","endLine":18,"endColumn":16},{"ruleId":"222","severity":1,"message":"223","line":46,"column":33,"nodeType":"224","messageId":"225","endLine":46,"endColumn":39},{"ruleId":"226","severity":1,"message":"227","line":56,"column":31,"nodeType":"228","messageId":"229","endLine":56,"endColumn":33},{"ruleId":"226","severity":1,"message":"227","line":74,"column":31,"nodeType":"228","messageId":"229","endLine":74,"endColumn":33},{"ruleId":"200","severity":1,"message":"230","line":3,"column":10,"nodeType":"202","messageId":"203","endLine":3,"endColumn":21},{"ruleId":"200","severity":1,"message":"231","line":5,"column":8,"nodeType":"202","messageId":"203","endLine":5,"endColumn":12},{"ruleId":"204","severity":1,"message":"232","line":37,"column":8,"nodeType":"206","endLine":37,"endColumn":10,"suggestions":"233"},{"ruleId":"200","severity":1,"message":"234","line":66,"column":13,"nodeType":"202","messageId":"203","endLine":66,"endColumn":21},{"ruleId":"204","severity":1,"message":"235","line":38,"column":8,"nodeType":"206","endLine":38,"endColumn":10,"suggestions":"236"},{"ruleId":"200","severity":1,"message":"237","line":5,"column":10,"nodeType":"202","messageId":"203","endLine":5,"endColumn":14},{"ruleId":"200","severity":1,"message":"201","line":19,"column":36,"nodeType":"202","messageId":"203","endLine":19,"endColumn":41},{"ruleId":"204","severity":1,"message":"238","line":35,"column":8,"nodeType":"206","endLine":35,"endColumn":10,"suggestions":"239"},{"ruleId":"200","severity":1,"message":"237","line":4,"column":10,"nodeType":"202","messageId":"203","endLine":4,"endColumn":14},{"ruleId":"200","severity":1,"message":"208","line":31,"column":9,"nodeType":"202","messageId":"203","endLine":31,"endColumn":17},{"ruleId":"200","severity":1,"message":"209","line":32,"column":9,"nodeType":"202","messageId":"203","endLine":32,"endColumn":17},{"ruleId":"204","severity":1,"message":"240","line":76,"column":8,"nodeType":"206","endLine":76,"endColumn":10,"suggestions":"241"},{"ruleId":"204","severity":1,"message":"242","line":50,"column":8,"nodeType":"206","endLine":50,"endColumn":10,"suggestions":"243"},"no-native-reassign",["244"],"no-negated-in-lhs",["245"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: '_id' and 'token'. Either include them or remove the dependency array.","ArrayExpression",["246"],"'category' is assigned a value but never used.","'shipping' is assigned a value but never used.","'redirectToProfile' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.",["247"],"'Scroll' is defined but never used.","'setLimit' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'limit', 'loadFilteredResults', 'myFilters.filters', and 'skip'. Either include them or remove the dependency array.",["248"],"'value' is assigned a value but never used.","'readReview' is defined but never used.","'getreviews' is assigned a value but never used.","'setGetreviews' is assigned a value but never used.","'token' is assigned a value but never used.","no-dupe-keys","Duplicate key 'height'.","ObjectExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'getProducts' is defined but never used.","'Card' is defined but never used.","React Hook useEffect has missing dependencies: 'token' and 'userId'. Either include them or remove the dependency array.",["249"],"'getNonce' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loadOrders' and 'loadStatusValues'. Either include them or remove the dependency array.",["250"],"'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'init' and 'match.params.userId'. Either include them or remove the dependency array.",["251"],"React Hook useEffect has missing dependencies: 'init' and 'match.params.productId'. Either include them or remove the dependency array.",["252"],"React Hook useEffect has missing dependencies: 'init' and 'match.params.categoryId'. Either include them or remove the dependency array.",["253"],"no-global-assign","no-unsafe-negation",{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},{"desc":"264","fix":"265"},{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},"Update the dependencies array to be: [_id, token]",{"range":"270","text":"271"},"Update the dependencies array to be: [init]",{"range":"272","text":"273"},"Update the dependencies array to be: [limit, loadFilteredResults, myFilters.filters, skip]",{"range":"274","text":"275"},"Update the dependencies array to be: [token, userId]",{"range":"276","text":"277"},"Update the dependencies array to be: [loadOrders, loadStatusValues]",{"range":"278","text":"279"},"Update the dependencies array to be: [init, match.params.userId]",{"range":"280","text":"281"},"Update the dependencies array to be: [init, match.params.productId]",{"range":"282","text":"283"},"Update the dependencies array to be: [init, match.params.categoryId]",{"range":"284","text":"285"},[747,749],"[_id, token]",[1365,1367],"[init]",[2151,2153],"[limit, loadFilteredResults, myFilters.filters, skip]",[1185,1187],"[token, userId]",[1034,1036],"[loadOrders, loadStatusValues]",[921,923],"[init, match.params.userId]",[2088,2090],"[init, match.params.productId]",[1466,1468],"[init, match.params.categoryId]"]