[{"/Users/zakariasalogo/Desktop/online_shopping_client/src/index.js":"1","/Users/zakariasalogo/Desktop/online_shopping_client/src/App.js":"2","/Users/zakariasalogo/Desktop/online_shopping_client/src/Routes.js":"3","/Users/zakariasalogo/Desktop/online_shopping_client/src/user/Signup.js":"4","/Users/zakariasalogo/Desktop/online_shopping_client/src/user/Signin.js":"5","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Home.js":"6","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Menu.js":"7","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Layout.js":"8","/Users/zakariasalogo/Desktop/online_shopping_client/src/config.js":"9","/Users/zakariasalogo/Desktop/online_shopping_client/src/auth/index.js":"10","/Users/zakariasalogo/Desktop/online_shopping_client/src/user/UserDashboard.js":"11","/Users/zakariasalogo/Desktop/online_shopping_client/src/auth/PrivateRoute.js":"12","/Users/zakariasalogo/Desktop/online_shopping_client/src/auth/AdminRoute.js":"13","/Users/zakariasalogo/Desktop/online_shopping_client/src/user/AdminDashboard.js":"14","/Users/zakariasalogo/Desktop/online_shopping_client/src/admin/AddCategory.js":"15","/Users/zakariasalogo/Desktop/online_shopping_client/src/admin/apiAdmin.js":"16","/Users/zakariasalogo/Desktop/online_shopping_client/src/admin/AddProduct.js":"17","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/apiCore.js":"18","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Card.js":"19","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/ShowImage.js":"20","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Shop.js":"21","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Checkbox.js":"22","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/fixedPrices.js":"23","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/RadioBox.js":"24","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Search.js":"25","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Product.js":"26","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/cartHelpers.js":"27","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Scroll.js":"28","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Cart.js":"29","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Checkout.js":"30","/Users/zakariasalogo/Desktop/online_shopping_client/src/admin/Orders.js":"31","/Users/zakariasalogo/Desktop/online_shopping_client/src/user/Profile.js":"32","/Users/zakariasalogo/Desktop/online_shopping_client/src/user/apiUser.js":"33","/Users/zakariasalogo/Desktop/online_shopping_client/src/admin/ManageProducts.js":"34","/Users/zakariasalogo/Desktop/online_shopping_client/src/admin/UpdateProduct.js":"35"},{"size":158,"mtime":1608253895876,"results":"36","hashOfConfig":"37"},{"size":99,"mtime":1608164709135,"results":"38","hashOfConfig":"37"},{"size":2036,"mtime":1612384700335,"results":"39","hashOfConfig":"37"},{"size":2358,"mtime":1608665360974,"results":"40","hashOfConfig":"37"},{"size":2616,"mtime":1608959389244,"results":"41","hashOfConfig":"37"},{"size":1884,"mtime":1611702204690,"results":"42","hashOfConfig":"37"},{"size":3652,"mtime":1611007679623,"results":"43","hashOfConfig":"37"},{"size":388,"mtime":1611052810026,"results":"44","hashOfConfig":"37"},{"size":49,"mtime":1608356394947,"results":"45","hashOfConfig":"37"},{"size":1960,"mtime":1608828734097,"results":"46","hashOfConfig":"37"},{"size":3658,"mtime":1612306512965,"results":"47","hashOfConfig":"37"},{"size":603,"mtime":1608832852603,"results":"48","hashOfConfig":"37"},{"size":636,"mtime":1609108601434,"results":"49","hashOfConfig":"37"},{"size":2241,"mtime":1612315582457,"results":"50","hashOfConfig":"37"},{"size":2486,"mtime":1609112826141,"results":"51","hashOfConfig":"37"},{"size":3479,"mtime":1612350764781,"results":"52","hashOfConfig":"37"},{"size":5677,"mtime":1609464405991,"results":"53","hashOfConfig":"37"},{"size":3078,"mtime":1611638408853,"results":"54","hashOfConfig":"37"},{"size":5156,"mtime":1611468935029,"results":"55","hashOfConfig":"37"},{"size":346,"mtime":1609568548434,"results":"56","hashOfConfig":"37"},{"size":4528,"mtime":1612340766475,"results":"57","hashOfConfig":"37"},{"size":1162,"mtime":1609923808242,"results":"58","hashOfConfig":"37"},{"size":499,"mtime":1610262041366,"results":"59","hashOfConfig":"37"},{"size":674,"mtime":1610019210433,"results":"60","hashOfConfig":"37"},{"size":4185,"mtime":1611018041127,"results":"61","hashOfConfig":"37"},{"size":2020,"mtime":1610672937774,"results":"62","hashOfConfig":"37"},{"size":2616,"mtime":1611621984720,"results":"63","hashOfConfig":"37"},{"size":220,"mtime":1610883057741,"results":"64","hashOfConfig":"37"},{"size":1591,"mtime":1611350732746,"results":"65","hashOfConfig":"37"},{"size":5998,"mtime":1611650510890,"results":"66","hashOfConfig":"37"},{"size":6012,"mtime":1612138462910,"results":"67","hashOfConfig":"37"},{"size":2978,"mtime":1612257329121,"results":"68","hashOfConfig":"37"},{"size":1608,"mtime":1612261357571,"results":"69","hashOfConfig":"37"},{"size":3492,"mtime":1612352414816,"results":"70","hashOfConfig":"37"},{"size":6605,"mtime":1612386979757,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1ww72qn",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"74"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"74"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"74"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"74"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"74"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"74"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/zakariasalogo/Desktop/online_shopping_client/src/index.js",[],["153","154"],"/Users/zakariasalogo/Desktop/online_shopping_client/src/App.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/Routes.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/user/Signup.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/user/Signin.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Home.js",["155"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"./Layout\";\nimport { getProducts } from \"./apiCore\";\nimport Card from \"./Card\";\nimport Search from \"./Search\";\nimport Scroll from \"./Scroll\";\n\n\nconst Home = () => {\n    const [productsBySell, setProductsBySell] = useState([])\n    const [productsByArrival, setProductsByArrival] = useState([])\n    const [error, setError] = useState(false)\n\n    const loadProductsByArrival = () => {\n        getProducts(\"sold\").then(data => {\n            if (data.error) {\n                setError(data.error)\n            } else {\n                setProductsBySell(data)\n            }\n        })\n    }\n\n    const loadProductsBySell = () => {\n        getProducts(\"createdAt\").then(data => {\n            if (data.error) {\n                setError(data.error)\n            } else {\n                setProductsByArrival(data)\n            }\n        })\n    }\n\n    useEffect(() => {\n        loadProductsByArrival()\n        loadProductsBySell()\n    }, [])\n\n    return (\n        <Layout title=\"Home Page\" description=\"Online Shopping App\" className=\"container-fluid \">\n\n            <Search />\n            \n            <Scroll>\n            \n            <h2 className=\"mb-4\">New Arrival</h2>\n            <div className=\"row\">\n                {productsByArrival.map((product, i) => (\n                    <div key={i} className=\"col-4 mb-3\">\n                        <Card product={product} />\n                    </div>\n                ))}\n            </div>\n\n            <h2 className=\"mb-4\">Best Sellers</h2>\n            <div className=\"row\">\n                {productsBySell.map((product, i) => (\n                    <div key={i} className=\"col-4 mb-3\">\n                        <Card product={product} />\n                    </div>\n                ))}\n            </div>\n\n            </Scroll>\n\n        </Layout>\n    )\n};\n\nexport default Home;","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Menu.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Layout.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/config.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/auth/index.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/user/UserDashboard.js",["156"],"import React, {useState, useEffect} from \"react\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth/index\";\nimport { Link } from \"react-router-dom\";\nimport { getPurchaseHistory } from \"./apiUser\";\nimport moment from \"moment\";\n\nconst Dashboard = () => {\n   const [ history, setHistory ] = useState([])\n\n    const { user: {_id, name, email, rol } } = isAuthenticated();\n    const token = isAuthenticated().token;\n     \n    const init = (userId, token) => {\n        getPurchaseHistory(userId, token).then(data => {\n            if (data.error) {\n                console.log(data.error)\n            } else {\n               setHistory(data)\n            }\n        })\n    }\n\n    useEffect(() => {\n        init(_id, token)\n    }, [])\n\n    const userLinks = () => {\n        return (\n            <div className=\"card\">\n                <h4 className=\"card-header\">User links</h4>\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item\">\n                        <Link className=\"nav-link\" to=\"/cart\">My Cart</Link>\n                    </li>\n\n                    <li className=\"list-group-item\">\n                        <Link className=\"nav-link\" to={`/profile/${_id}`}>\n                            Update Profile\n                      </Link>\n                    </li>\n                </ul>\n            </div>\n        )\n    }\n\n    const userInfo = () => {\n        return (\n            <div className=\"card mb-5\">\n                <h3 className=\"card-header\">User Profile</h3>\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item\">{name}</li>\n                    <li className=\"list-group-item\">{email}</li>\n                    <li className=\"list-group-item\">{rol === 1 ? \"Admin\" : \"Registered User\"}</li>\n                </ul>\n            </div>\n        )\n    }\n\n    const purchaseHistory = history => {\n        return (\n            <div className=\"card mb-5\">\n                <h3 className=\"card-header\">Purchase history</h3>\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item\">\n                        {history.map((h, i) => {\n                            return (\n                                <div>\n                                    <hr />\n                                    {h.products.map((p, i) => {\n                                        return (\n                                            <div key={i}>\n                                                <h6>Product name: {p.name}</h6>\n                                                <h6>Product price: ${p.price}</h6>\n                                                <h6>\n                                                    Purchased date:{\" \"}\n                                                    {moment(p.createdAt).fromNow()}\n                                                </h6>\n                                            </div>\n                                        );\n                                    })}\n                                </div>\n                            );\n                        })}\n                    </li>\n                </ul>\n            </div>\n        );\n    };\n\n    return (\n        <Layout title=\"Dashboard\" description={`Hello ${name}`} className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col-3\">\n                    {userLinks()}\n                </div>\n                <div className=\"col-9\">\n                    {userInfo()}\n                    {purchaseHistory(history)}\n                </div>\n            </div>\n\n\n        </Layout>\n    );\n};\nexport default Dashboard;","/Users/zakariasalogo/Desktop/online_shopping_client/src/auth/PrivateRoute.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/auth/AdminRoute.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/user/AdminDashboard.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/admin/AddCategory.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/admin/apiAdmin.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/admin/AddProduct.js",["157","158","159","160"],"import React, { useState, useEffect } from 'react';\nimport Layout from '../core/Layout';\nimport { isAuthenticated } from '../auth';\nimport { Link } from 'react-router-dom';\nimport { createProduct, getCategories } from './apiAdmin';\n\nconst AddProduct = () => {\n    const [values, setValues] = useState({\n        name: '',\n        description: '',\n        price: '',\n        categories: [],\n        category: '',\n        shipping: '',\n        quantity: '',\n        photo: '',\n        loading: false,\n        error: '',\n        createdProduct: '',\n        redirectToProfile: false,\n        formData: ''\n    });\n\n    const { user, token } = isAuthenticated();\n    const {\n        name,\n        description,\n        price,\n       categories,\n        category,\n        shipping,\n        quantity,\n        loading,\n        error,\n        createdProduct,\n        redirectToProfile,\n        formData\n    } = values;\n\n    // load categories and set form data\n    const init = () => {\n        getCategories().then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                setValues({\n                    ...values,\n                    categories: data,\n                    formData: new FormData()\n                });\n            }\n        });\n    };\n\n    useEffect(() => {\n        init();\n    },[])\n\n    const handleChange = name => event => {\n        const value = name === 'photo' ? event.target.files[0] : event.target.value;\n        formData.set(name, value);\n        setValues({ ...values, [name]: value });\n    };\n\n    const clickSubmit = event => {\n        event.preventDefault();\n        setValues({ ...values, error: '', loading: true });\n\n        createProduct(user._id, token, formData).then(data => {\n            if (data.error) {\n                 setValues({ ...values, error: data.error });\n            } else {\n                   setValues({\n                    ...values,\n                    name: '',\n                    description: '',\n                    photo: '',\n                    price: '',\n                    quantity: '',\n                    loading: false,\n                    createdProduct: data.name\n                });\n            }\n        });\n    };\n\n    const newPostForm = () => (\n        <form className=\"mb-3\" onSubmit={clickSubmit}>\n            <h4>Post Photo</h4>\n            <div className=\"form-group\">\n                <label className=\"btn btn-secondary\">\n                    <input onChange={handleChange('photo')} type=\"file\" name=\"photo\" accept=\"image/*\" />\n                </label>\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Name</label>\n                <input onChange={handleChange('name')} type=\"text\" className=\"form-control\" value={name} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Description</label>\n                <textarea onChange={handleChange('description')} className=\"form-control\" value={description} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Price</label>\n                <input onChange={handleChange('price')} type=\"number\" className=\"form-control\" value={price} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Category</label>\n                <select onChange={handleChange('category')} className=\"form-control\">\n                    <option>Please select </option>\n                     {categories && categories.map((c,i)=>(\n                         <option key={i} value={c._id} >{c.name}</option>\n                     ))}\n                    \n                </select>\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Shipping</label>\n                <select onChange={handleChange('shipping')} className=\"form-control\">\n                    <option>Please select</option>\n                    <option value=\"0\">No</option>\n                    <option value=\"1\">Yes</option>\n                </select>\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Quantity</label>\n                <input onChange={handleChange('quantity')} type=\"number\" className=\"form-control\" value={quantity} />\n            </div>\n\n            <button className=\"btn btn-outline-primary\">Create Product</button>\n        </form>\n    );\n\n    const goBack = () => (\n        <div className=\"mt-5\">\n             <Link to=\"/admin/dashboard\" className=\"text-warning\">Back to Dashboard</Link>\n        </div>\n    );\n\n    const showError = () => (\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\n            {error}\n        </div>\n    );\n\n    const showSuccess = () => (\n        <div className=\"alert alert-info\" style={{ display: createdProduct ? '' : 'none' }}>\n            <h2>{`${createdProduct}`} is created!</h2>\n        </div>\n    );\n\n    const showLoading = () =>\n        loading && (\n            <div className=\"alert alert-success\">\n                <h2>Loading...</h2>\n            </div>\n        );\n\n    return (\n        <Layout title=\"Add a new product\" description={`Hello ${user.name}`}>\n            <div className=\"row\">\n                <div className=\"col-md-8 offset-md-2\">\n                    {showLoading()}\n                    {showSuccess()}\n                    {showError()}\n                    {newPostForm()}\n                    {goBack()}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default AddProduct;\n","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/apiCore.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Card.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/core/ShowImage.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Shop.js",["161","162","163"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"./Layout\";\nimport Card from \"./Card\";\nimport { getCategories, getFilteredProducts } from \"./apiCore\";\nimport Checkbox from \"./Checkbox\";\nimport RadioBox from \"./RadioBox\";\nimport { prices } from \"./fixedPrices\";\nimport Scroll from \"./Scroll\";\n\n\n\nconst Shop = () => {\n    const [myFilters, setMyFilters] = useState({\n        filters: { category: [], price: [] }\n    });\n    const [categories, setCategories] = useState([]);\n    const [error, setError] = useState(false);\n    const [limit, setLimit] = useState(6);\n    const [skip, setSkip] = useState(0);\n    const [size, setSize] = useState(0);\n    const [filteredResults, setFilteredResults] = useState([]);\n\n    const init = () => {\n        getCategories().then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setCategories(data);\n            }\n        });\n    };\n\n    const loadFilteredResults = newFilters => {\n        // console.log(newFilters);\n        getFilteredProducts(skip, limit, newFilters).then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setFilteredResults(data.data);\n                setSize(data.size);\n                setSkip(0);\n            }\n        });\n    };\n\n    const loadMore = () => {\n        let toSkip = skip + limit;\n        // console.log(newFilters);\n        getFilteredProducts(toSkip, limit, myFilters.filters).then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setFilteredResults([...filteredResults, ...data.data]);\n                setSize(data.size);\n                setSkip(toSkip);\n            }\n        });\n    };\n\n\n    const loadMoreButton = () => {\n        return (\n            size > 0 && size >= limit && (\n                <button onClick={loadMore} className=\"btn btn-warning mb-5\">\n                    Load more\n                </button>\n            )\n        )\n    };\n\n\n    useEffect(() => {\n        init();\n        loadFilteredResults(skip, limit, myFilters.filters);\n    }, []);\n\n    const handleFilters = (filters, filterBy) => {\n        // console.log(\"SHOP\", filters, filterBy);\n        const newFilters = { ...myFilters };\n        newFilters.filters[filterBy] = filters;\n\n        if (filterBy === \"price\") {\n            let priceValues = handlePrice(filters);\n            newFilters.filters[filterBy] = priceValues;\n        }\n        loadFilteredResults(myFilters.filters);\n        setMyFilters(newFilters);\n    };\n\n    const handlePrice = value => {\n        const data = prices;\n        let array = [];\n\n        for (let key in data) {\n            if (data[key]._id === parseInt(value)) {\n                array = data[key].array;\n            }\n        }\n        return array;\n    };\n\n    return (\n        \n        <Layout\n            title=\"Shop Page\"\n            description=\"\"\n            className=\"container-fluid\"\n        >\n        \n        \n          <Scroll>\n            <div className=\"row\">\n                <div className=\"col-4\">\n                    <h4>Filter by categories</h4>\n                    <ul>\n                    \n                        <Checkbox\n                            categories={categories}\n                            handleFilters={filters =>\n                                handleFilters(filters, \"category\")\n                            }\n                        />                  \n                    </ul>\n\n                    <h4>Filter by price range</h4>\n                    <div>\n                        <RadioBox\n                            prices={prices}\n                            handleFilters={filters =>\n                                handleFilters(filters, \"price\")\n                            }\n                        />\n\n                    </div>\n                </div>                    \n\n                <div className=\"col-8\">\n                    <h2 className=\"mb-4\">Products</h2>\n                    <div className=\"row\">\n                        {filteredResults.map((product, i) => (\n                            <div key={i} className=\"col-6 mb-3\">\n                                <Card product={product} />\n                            </div>\n                        ))}\n                    </div>\n                    <hr />\n                    {loadMoreButton()}\n\n                </div>\n            </div>\n            </Scroll>\n        </Layout>\n    \n    );\n};\n\nexport default Shop;","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Checkbox.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/core/fixedPrices.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/core/RadioBox.js",["164"],"//import { Fragment } from \"react\";\nimport React, { useState,/* useEffect */} from \"react\";\n\n\nconst RadioBox = ({ prices, handleFilters }) => {\n     const [ value, setValue ] = useState(0);\n      \n     const handleChange = (event) => {\n         handleFilters(event.target.value)\n         setValue(event.target.value)\n     };\n\n     return prices.map((p, i) => (\n        <div  key={i}>\n            <input onChange={handleChange} \n            value={`${p._id}`} \n            name={p}\n            type=\"radio\"\n             className=\"mr-2 ml-4\" \n             />\n            <label className=\"form-check-label\">{p.name}</label>\n        </div>\n    ));\n};\n\nexport default RadioBox;","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Search.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Product.js",["165"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"./Layout\";\nimport { read, listRelated } from \"./apiCore\";\nimport Card from \"./Card\";\n\n\nconst Product = (props) => {\n    const [product, setProduct] = useState({});\n    const [relatedProduct, setRelatedProduct] = useState([]);\n    const [error, setError] = useState(false);\n\n    const loadSingleProduct = productId => {\n        read(productId).then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setProduct(data);\n                // fetch related products\n                listRelated(data._id).then(data => {\n                    if (data.error) {\n                        setError(data.error)\n                    } else {\n                        setRelatedProduct(data);\n                    }\n                })\n            }\n        })\n    }\n\n    useEffect(() => {\n        const productId = props.match.params.productId // from the URL\n        loadSingleProduct(productId)\n    }, [props])// [props] mean anytime there a change useEffect will update the state\n\n\n    return (\n        <Layout\n            title={product && product.name}\n            description={\n                product &&\n                product.description &&\n                product.description.substring(0, 100)}\n            className=\"container-fluid\"\n        >\n\n            <div className=\"row\">\n                <div className=\"col-8\">\n                    {product && product.description && (\n                        <Card product={product} showViewProductButton={false} />\n                    )}\n                </div>\n                <div className=\"col-4\">\n                    <h4>Related products</h4>\n                    {relatedProduct.map((p, i) => (\n                        <div className=\"mb-3\">\n                            <Card key={i} product={p} />\n                        </div>\n                    ))}\n                </div>\n\n            </div>\n\n        </Layout>\n    )\n}\n\nexport default Product;","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/cartHelpers.js",["166","167"],"export const addItem = (item = [], count = 0, next = f => f) => {\n    let cart = [];\n    if (typeof window !== 'undefined') {\n        if (localStorage.getItem('cart')) {\n            cart = JSON.parse(localStorage.getItem('cart'));\n        }\n        cart.push({\n            ...item,\n            count: 1\n        });\n\n        // remove duplicates\n        // build an Array from new Set and turn it back into array using Array.from\n        // so that later we can re-map it\n        // new set will only allow unique values in it\n        // so pass the ids of each object/product\n        // If the loop tries to add the same value again, it'll get ignored\n        // ...with the array of ids we got on when first map() was used\n        // run map() on it again and return the actual product from the cart\n\n        cart = Array.from(new Set(cart.map(p => p._id))).map(id => {\n            return cart.find(p => p._id === id);\n        });\n\n        localStorage.setItem('cart', JSON.stringify(cart));\n        next();\n    }\n};\n\nexport const itemTotal = () => {\n    if (typeof window !== \"undefined\") {\n        if (localStorage.getItem(\"cart\")) {\n            return JSON.parse(localStorage.getItem(\"cart\")).length;\n        }\n    }\n    return 0;\n};\n\nexport const getCart = () => {\n    if (typeof window !== \"undefined\") {\n        if (localStorage.getItem(\"cart\")) {\n            return JSON.parse(localStorage.getItem(\"cart\"));\n        }\n    }\n    return [];// if we don't get any item we return empty array\n};\n\n\nexport const updateItem = (productId, count) => {\n    let cart = [];\n    if (typeof window !== 'undefined') {\n        if (localStorage.getItem('cart')) {\n            cart = JSON.parse(localStorage.getItem('cart'));\n        }\n\n        cart.map((product, i) => {\n            if (product._id === productId) {\n                cart[i].count = count;\n            }\n        });\n\n        localStorage.setItem('cart', JSON.stringify(cart));\n    }\n};\n\n\nexport const removeItem = (productId) => {\n    let cart = [];\n    if (typeof window !== 'undefined') {\n        if (localStorage.getItem('cart')) {\n            cart = JSON.parse(localStorage.getItem('cart'));\n        }\n\n        cart.map((product, i) => {\n            if (product._id === productId) {\n                cart.splice(i, 1);// to remove 1 item off\n            }\n        });\n\n        localStorage.setItem('cart', JSON.stringify(cart));\n    }\n    return cart;\n};\n\nexport const emptyCart = next => {\n    if (typeof window !== 'undefined') {\n        localStorage.removeItem('cart');\n        window.location.reload(false);//to refrech the page\n        next();\n    }\n};","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Scroll.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Cart.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Checkout.js",["168","169","170","171"],"\nimport React, { useState, useEffect } from 'react';\nimport { getProducts, getBraintreeClientToken, processPayment, createOrder } from './apiCore';\nimport { emptyCart } from './cartHelpers';\nimport Card from './Card';\nimport { isAuthenticated } from '../auth';\nimport { Link } from 'react-router-dom';\nimport DropIn from 'braintree-web-drop-in-react';\n\nconst Checkout = ({ products, setRun = f => f, run = undefined }) => {\n    const [data, setData] = useState({\n        loading: false,\n        success: false,\n        clientToken: null,\n        error: '',\n        instance: {},\n        address: ''\n    });\n\n    const userId = isAuthenticated() && isAuthenticated().user._id;\n    const token = isAuthenticated() && isAuthenticated().token;\n\n    const getToken = (userId, token) => {\n        getBraintreeClientToken(userId, token).then(data => {\n            if (data.error) {\n                console.log(data.error);\n                setData({ ...data, error: data.error });\n            } else {\n                console.log(data);\n                setData({ clientToken: data.clientToken });\n            }\n        });\n    };\n\n    useEffect(() => {\n        getToken(userId, token);\n    }, []);\n\n    const handleAddress = event => {\n        setData({ ...data, address: event.target.value })\n    };\n\n    const getTotal = () => {\n        return products.reduce((currentValue, nextValue) => {\n            return currentValue + nextValue.count * nextValue.price;\n        }, 0);\n    };\n\n    const showCheckout = () => {\n        return isAuthenticated() ? (\n            <div>{showDropIn()}</div>\n        ) : (\n            <Link to=\"/signin\">\n                <button className=\"btn btn-primary\">Sign in to checkout</button>\n            </Link>\n        );\n    };\n\n  \n    let deliveryAddress = data.address;\n    const buy = () => {\n        setData({ loading: true });\n        // send the nonce to your server\n        // nonce = data.instance.requestPaymentMethod()\n        let nonce;\n        let getNonce = data.instance\n            .requestPaymentMethod()\n            .then(data => {\n                // console.log(data);\n                nonce = data.nonce;\n                // once you have nonce (card type, card number) send nonce as 'paymentMethodNonce'\n                // and also total to be charged\n                // console.log(\n                //     \"send nonce and total to process: \",\n                //     nonce,\n                //     getTotal(products)\n                // );\n                const paymentData = {\n                    paymentMethodNonce: nonce,\n                    amount: getTotal(products)\n                };\n\n                processPayment(userId, token, paymentData)\n                    .then(response => {\n                        console.log(\"this is payment process \",response);\n                        // empty cart\n                        // create order\n                        const createOrderData = {\n                            products: products,\n                            transaction_id: response.transaction.id,\n                            amount: response.transaction.amount,\n                            address: deliveryAddress\n                        };\n\n                        createOrder(userId, token, createOrderData)\n                            .then(response => {\n                                emptyCart(() => {\n                                    setRun(!run); // run useEffect in parent Cart\n                                    console.log('payment success and empty cart');\n                                    setData({\n                                        loading: false,\n                                        success: true\n                                        \n                                    });\n                                });\n                            })\n                         \n                    })\n                   \n            })\n            .catch(error => {\n                // console.log(\"dropin error: \", error);\n                setData({ ...data, error: error.message });\n            });\n    };\n\n    const showDropIn = () => (\n        <div onBlur={() => setData({ ...data, error: '' })}>\n            {data.clientToken !== null && products.length > 0 ? (\n                <div>\n                    <div className=\"gorm-group mb-3\">\n                        <label className=\"text-muted\">Delivery address:</label>\n                        <textarea\n                            onChange={handleAddress}\n                            className=\"form-control\"\n                            value={data.address}\n                            placeholder=\"Type your address here...\"\n                        />\n                    </div>\n\n                    <DropIn\n                        options={{\n                            authorization: data.clientToken,\n                            paypal: {\n                                flow: 'vault'\n                            }\n                        }}\n                        onInstance={instance => (data.instance = instance)}\n                    />\n                    <button onClick={buy} className=\"btn btn-success btn-block\">\n                        Pay\n                    </button>\n                </div>\n            ) : null}\n        </div>\n    );\n\n    const showError = error => (\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\n            {error}\n        </div>\n    );\n\n    const showSuccess = success => (\n        <div className=\"alert alert-info\" style={{ display: success ? '' : 'none' }}>\n            Thanks! Your payment was successful!\n        </div>\n    );\n\n    const showLoading = loading => loading && <h2 className=\"text-danger\">Loading...</h2>;\n\n    return (\n        <div>\n            <h2>Total: ${getTotal()}</h2>\n            {showLoading(data.loading)}\n            {showSuccess(data.success)}\n            {showError(data.error)}\n            {showCheckout()}\n        </div>\n    );\n};\n\nexport default Checkout;\n\n\n\n","/Users/zakariasalogo/Desktop/online_shopping_client/src/admin/Orders.js",["172"],"\nimport React, { useState, useEffect } from 'react';\nimport Layout from '../core/Layout';\nimport { isAuthenticated } from '../auth';\nimport { Link } from 'react-router-dom';\nimport { listOrders, getStatusValues, updateOrderStatus } from './apiAdmin';\nimport moment from \"moment\";\n\nconst Orders = () => {\n    const [orders, setOrders] = useState([])\n    const [statusValues, setStatusValues ] = useState([]);\n\n    const { user, token } = isAuthenticated()\n\n    const loadOrders = () => {\n        listOrders(user._id, token).then(data => {\n            if (data.error) {\n                console.log(data.error);\n            } else {\n                setOrders(data);\n            }\n        });\n    };\n\n    const loadStatusValues = () => {\n        getStatusValues(user._id, token).then(data => {\n            if (data.error) {\n                console.log(data.error);\n            } else {\n                setStatusValues(data);\n            }\n        });\n    };\n\n    useEffect(() => {\n        loadOrders();\n        loadStatusValues();\n    }, [])\n\n    const showOrdersLength = () => {\n        if (orders.length > 0) {\n            return (\n                <h1 className=\"text-danger display-2\">\n                    Total orders: {orders.length}\n                </h1>\n            );\n        } else {\n            return <h1 className=\"text-danger\">No orders</h1>\n        }\n    };\n\n    const showInput = (key, value) => (\n        <div className=\"input-group mb-2 mr-sm-2\">\n            <div className=\"input-group-prepend\">\n                <div className=\"input-group-text\">{key}</div>\n            </div>\n            <input\n                type=\"text\"\n                value={value}\n                className=\"form-control\"\n                readOnly\n            />\n        </div>\n    )\n\n    const goBack = () => (\n        <div className=\"mt-5\">\n            <Link to=\"/admin/dashboard\" className=\"text-warning\">Back to Dashboard</Link>\n        </div>\n    );\n\n    const handleStatusChange = (e, orderId) => {\n        updateOrderStatus(user._id, token, orderId, e.target.value).then(data => {\n            if (data.error) {\n                console.log(\"Status update failed\")\n            } else {\n                loadOrders()\n            }\n        })\n    }\n\n    const showStatus = (o) => (\n        <div className=\"form-group\">\n           <h3 className=\"mark mb-4\">Status: {o.status}</h3>\n           <select \n              className=\"form-control\" \n              onChange={(e) => (handleStatusChange(e, o._id))}\n              >\n               <option>Update Status</option>\n                  {statusValues.map((status, index) => (\n                      <option key={index} value={status}>\n                         {status}\n                      </option>\n                  ))}\n           </select>\n        </div>\n    )\n\n\n    return (\n        <Layout title=\"Ordres\" description={`Hello ${user.name}`} >\n\n            <div className=\"row\">\n                <div className=\"col-md-8 offset-md-2\">\n                    {showOrdersLength()}\n\n                    {orders.map((o, oindex) => {\n                        return (\n                            <div\n                                className=\"mt-5\"\n                                key={oindex}\n                                style={{ borderBottom: \"5px solid indigo\" }}>\n                                <h2 className=\"mb-5\">\n                                    <span className=\"bg-secondary\">\n                                        Order ID: {o._id}\n                                    </span>\n                                </h2>\n                                <ul className=\"list-group mb-2\">\n                                    <li className=\"list-group-item\">\n                                        {showStatus(o)}\n                                    </li>\n                                    <li className=\"list-group-item\">\n                                        Transaction ID:  {o.transaction_id}\n                                    </li>\n                                    <li className=\"list-group-item\">\n                                        Amount: ${o.amount}\n                                    </li>\n                                    <li className=\"list-group-item\">\n                                        Ordered by: {o.user.name}\n                                    </li>\n                                    <li className=\"list-group-item\">\n                                        Ordered on: {moment(o.createdAt).fromNow()}\n                                    </li>\n                                    <li className=\"list-group-item\">\n                                        Delivery address: {o.address}\n                                    </li>\n                                </ul>\n                                <h3 className=\"mt-4 mb-4 font-italic\">\n                                    Total products in the order: {o.products.length}\n                                </h3>\n\n                                {o.products.map((p, pIndex) => (\n                                    <div\n                                        className=\"mb-4\"\n                                        key={pIndex}\n                                        style={{\n                                            padding: \"20px\",\n                                            border: \"1px solid indigo\"\n                                        }}\n                                    >\n                                        {showInput(\"Product name\", p.name)}\n                                        {showInput(\"Product price\", p.price)}\n                                        {showInput(\"Product total\", p.count)}\n                                        {showInput(\"Product Id\", p._id)}\n                                    </div>\n                                ))}\n                            </div>\n                        );\n                    })}\n\n                    {goBack()}\n\n                </div>\n            </div>\n\n        </Layout>\n    )\n\n}\n\nexport default Orders;","/Users/zakariasalogo/Desktop/online_shopping_client/src/user/Profile.js",["173","174","175"],"\nimport React, { useState, useEffect } from \"react\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth/index\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { read, update, updateUser } from \"./apiUser\";\n\n\nconst Profile = ({ match }) => {\n    const [values, setValues] = useState({\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        error: false,\n        success: false\n    })\n\n    const { token } = isAuthenticated()\n    const { name, email, password, error, success } = values;\n\n\n    const init = (userId) => {\n        // console.log(userId)\n        read(userId, token).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: true })\n            } else {\n                setValues({ ...values, name: data.name, email: data.email })\n            }\n        })\n    };\n\n    useEffect(() => {\n        init(match.params.userId)\n    }, [])\n\n    const handleChange = name => e => {\n        setValues({...values, error: false, [name]: e.target.value});\n    };\n\n    const clickSubmit = (e) => {\n        e.preventDefault()\n        update(match.params.userId, token, {name, email, password}).then(data => {\n            if (data.error) {\n                console.log(data.error)\n            } else {\n                updateUser(data, () => {\n                    setValues({\n                        ...values,\n                        name: data.name,\n                        email: data.email,\n                        success: true\n                    });\n                });\n            }\n        })\n    };\n\n    const redirectUser = (success) => {\n        if (success) {\n            return <Redirect to=\"/cart\" />\n        }\n    }\n\n    \n    const profileUpdate = (name, email, password) => (\n        <form>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Name</label>\n                <input type=\"text\" onChange={handleChange('name')} className=\"form-control\" value={name} />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Email</label>\n                <input type=\"email\" onChange={handleChange('email')} className=\"form-control\" value={email} />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Password</label>\n                <input type=\"password\" onChange={handleChange('password')} className=\"form-control\" value={password} />\n            </div>\n\n            <button onClick={clickSubmit} className=\"btn btn-primary\">\n                Submit\n            </button>\n        </form>\n    );\n\n    return (\n        <Layout\n            title=\"Home Page\"\n            description=\"Update your profile\"\n            className=\"container-fluid\"\n        >\n     \n            <h2 className=\"mb-4\">Profile update</h2>\n            {profileUpdate(name, email, password)}\n            {redirectUser(success)}\n        </Layout>\n    )\n\n};\n\nexport default Profile;","/Users/zakariasalogo/Desktop/online_shopping_client/src/user/apiUser.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/admin/ManageProducts.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/admin/UpdateProduct.js",["176","177","178","179"],{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","severity":1,"message":"185","line":12,"column":12,"nodeType":"186","messageId":"187","endLine":12,"endColumn":17},{"ruleId":"188","severity":1,"message":"189","line":26,"column":8,"nodeType":"190","endLine":26,"endColumn":10,"suggestions":"191"},{"ruleId":"184","severity":1,"message":"192","line":30,"column":9,"nodeType":"186","messageId":"187","endLine":30,"endColumn":17},{"ruleId":"184","severity":1,"message":"193","line":31,"column":9,"nodeType":"186","messageId":"187","endLine":31,"endColumn":17},{"ruleId":"184","severity":1,"message":"194","line":36,"column":9,"nodeType":"186","messageId":"187","endLine":36,"endColumn":26},{"ruleId":"188","severity":1,"message":"195","line":57,"column":7,"nodeType":"190","endLine":57,"endColumn":9,"suggestions":"196"},{"ruleId":"184","severity":1,"message":"185","line":17,"column":12,"nodeType":"186","messageId":"187","endLine":17,"endColumn":17},{"ruleId":"184","severity":1,"message":"197","line":18,"column":19,"nodeType":"186","messageId":"187","endLine":18,"endColumn":27},{"ruleId":"188","severity":1,"message":"198","line":75,"column":8,"nodeType":"190","endLine":75,"endColumn":10,"suggestions":"199"},{"ruleId":"184","severity":1,"message":"200","line":6,"column":14,"nodeType":"186","messageId":"187","endLine":6,"endColumn":19},{"ruleId":"184","severity":1,"message":"185","line":10,"column":12,"nodeType":"186","messageId":"187","endLine":10,"endColumn":17},{"ruleId":"201","severity":1,"message":"202","line":56,"column":31,"nodeType":"203","messageId":"204","endLine":56,"endColumn":33},{"ruleId":"201","severity":1,"message":"202","line":74,"column":31,"nodeType":"203","messageId":"204","endLine":74,"endColumn":33},{"ruleId":"184","severity":1,"message":"205","line":3,"column":10,"nodeType":"186","messageId":"187","endLine":3,"endColumn":21},{"ruleId":"184","severity":1,"message":"206","line":5,"column":8,"nodeType":"186","messageId":"187","endLine":5,"endColumn":12},{"ruleId":"188","severity":1,"message":"207","line":37,"column":8,"nodeType":"190","endLine":37,"endColumn":10,"suggestions":"208"},{"ruleId":"184","severity":1,"message":"209","line":66,"column":13,"nodeType":"186","messageId":"187","endLine":66,"endColumn":21},{"ruleId":"188","severity":1,"message":"210","line":38,"column":8,"nodeType":"190","endLine":38,"endColumn":10,"suggestions":"211"},{"ruleId":"184","severity":1,"message":"212","line":5,"column":10,"nodeType":"186","messageId":"187","endLine":5,"endColumn":14},{"ruleId":"184","severity":1,"message":"185","line":19,"column":36,"nodeType":"186","messageId":"187","endLine":19,"endColumn":41},{"ruleId":"188","severity":1,"message":"213","line":35,"column":8,"nodeType":"190","endLine":35,"endColumn":10,"suggestions":"214"},{"ruleId":"184","severity":1,"message":"212","line":4,"column":10,"nodeType":"186","messageId":"187","endLine":4,"endColumn":14},{"ruleId":"184","severity":1,"message":"192","line":31,"column":9,"nodeType":"186","messageId":"187","endLine":31,"endColumn":17},{"ruleId":"184","severity":1,"message":"193","line":32,"column":9,"nodeType":"186","messageId":"187","endLine":32,"endColumn":17},{"ruleId":"188","severity":1,"message":"215","line":76,"column":8,"nodeType":"190","endLine":76,"endColumn":10,"suggestions":"216"},"no-native-reassign",["217"],"no-negated-in-lhs",["218"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: '_id' and 'token'. Either include them or remove the dependency array.","ArrayExpression",["219"],"'category' is assigned a value but never used.","'shipping' is assigned a value but never used.","'redirectToProfile' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.",["220"],"'setLimit' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'limit', 'loadFilteredResults', 'myFilters.filters', and 'skip'. Either include them or remove the dependency array.",["221"],"'value' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'getProducts' is defined but never used.","'Card' is defined but never used.","React Hook useEffect has missing dependencies: 'token' and 'userId'. Either include them or remove the dependency array.",["222"],"'getNonce' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loadOrders' and 'loadStatusValues'. Either include them or remove the dependency array.",["223"],"'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'init' and 'match.params.userId'. Either include them or remove the dependency array.",["224"],"React Hook useEffect has missing dependencies: 'init' and 'match.params.productId'. Either include them or remove the dependency array.",["225"],"no-global-assign","no-unsafe-negation",{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},"Update the dependencies array to be: [_id, token]",{"range":"240","text":"241"},"Update the dependencies array to be: [init]",{"range":"242","text":"243"},"Update the dependencies array to be: [limit, loadFilteredResults, myFilters.filters, skip]",{"range":"244","text":"245"},"Update the dependencies array to be: [token, userId]",{"range":"246","text":"247"},"Update the dependencies array to be: [loadOrders, loadStatusValues]",{"range":"248","text":"249"},"Update the dependencies array to be: [init, match.params.userId]",{"range":"250","text":"251"},"Update the dependencies array to be: [init, match.params.productId]",{"range":"252","text":"253"},[749,751],"[_id, token]",[1365,1367],"[init]",[2151,2153],"[limit, loadFilteredResults, myFilters.filters, skip]",[1185,1187],"[token, userId]",[1034,1036],"[loadOrders, loadStatusValues]",[921,923],"[init, match.params.userId]",[2088,2090],"[init, match.params.productId]"]