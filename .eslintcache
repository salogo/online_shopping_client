[{"/Users/zakariasalogo/Desktop/online_shopping_client/src/index.js":"1","/Users/zakariasalogo/Desktop/online_shopping_client/src/App.js":"2","/Users/zakariasalogo/Desktop/online_shopping_client/src/Routes.js":"3","/Users/zakariasalogo/Desktop/online_shopping_client/src/user/Signup.js":"4","/Users/zakariasalogo/Desktop/online_shopping_client/src/user/Signin.js":"5","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Home.js":"6","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Menu.js":"7","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Layout.js":"8","/Users/zakariasalogo/Desktop/online_shopping_client/src/config.js":"9","/Users/zakariasalogo/Desktop/online_shopping_client/src/auth/index.js":"10","/Users/zakariasalogo/Desktop/online_shopping_client/src/user/UserDashboard.js":"11","/Users/zakariasalogo/Desktop/online_shopping_client/src/auth/PrivateRoute.js":"12","/Users/zakariasalogo/Desktop/online_shopping_client/src/auth/AdminRoute.js":"13","/Users/zakariasalogo/Desktop/online_shopping_client/src/user/AdminDashboard.js":"14","/Users/zakariasalogo/Desktop/online_shopping_client/src/admin/AddCategory.js":"15","/Users/zakariasalogo/Desktop/online_shopping_client/src/admin/apiAdmin.js":"16","/Users/zakariasalogo/Desktop/online_shopping_client/src/admin/AddProduct.js":"17","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/apiCore.js":"18","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Card.js":"19","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/ShowImage.js":"20","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Shop.js":"21","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Checkbox.js":"22","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/fixedPrices.js":"23","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/RadioBox.js":"24","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Search.js":"25","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Product.js":"26","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/cartHelpers.js":"27","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Scroll.js":"28","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Cart.js":"29","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Checkout.js":"30"},{"size":158,"mtime":1608253895876,"results":"31","hashOfConfig":"32"},{"size":99,"mtime":1608164709135,"results":"33","hashOfConfig":"32"},{"size":1517,"mtime":1611012425356,"results":"34","hashOfConfig":"32"},{"size":2358,"mtime":1608665360974,"results":"35","hashOfConfig":"32"},{"size":2616,"mtime":1608959389244,"results":"36","hashOfConfig":"32"},{"size":1884,"mtime":1611702204690,"results":"37","hashOfConfig":"32"},{"size":3652,"mtime":1611007679623,"results":"38","hashOfConfig":"32"},{"size":388,"mtime":1611052810026,"results":"39","hashOfConfig":"32"},{"size":49,"mtime":1608356394947,"results":"40","hashOfConfig":"32"},{"size":1960,"mtime":1608828734097,"results":"41","hashOfConfig":"32"},{"size":2130,"mtime":1611216917417,"results":"42","hashOfConfig":"32"},{"size":603,"mtime":1608832852603,"results":"43","hashOfConfig":"32"},{"size":636,"mtime":1609108601434,"results":"44","hashOfConfig":"32"},{"size":1789,"mtime":1611217015863,"results":"45","hashOfConfig":"32"},{"size":2486,"mtime":1609112826141,"results":"46","hashOfConfig":"32"},{"size":1153,"mtime":1609359498205,"results":"47","hashOfConfig":"32"},{"size":5677,"mtime":1609464405991,"results":"48","hashOfConfig":"32"},{"size":3078,"mtime":1611638408853,"results":"49","hashOfConfig":"32"},{"size":5156,"mtime":1611468935029,"results":"50","hashOfConfig":"32"},{"size":346,"mtime":1609568548434,"results":"51","hashOfConfig":"32"},{"size":4501,"mtime":1611399719324,"results":"52","hashOfConfig":"32"},{"size":1162,"mtime":1609923808242,"results":"53","hashOfConfig":"32"},{"size":499,"mtime":1610262041366,"results":"54","hashOfConfig":"32"},{"size":674,"mtime":1610019210433,"results":"55","hashOfConfig":"32"},{"size":4185,"mtime":1611018041127,"results":"56","hashOfConfig":"32"},{"size":2020,"mtime":1610672937774,"results":"57","hashOfConfig":"32"},{"size":2616,"mtime":1611621984720,"results":"58","hashOfConfig":"32"},{"size":220,"mtime":1610883057741,"results":"59","hashOfConfig":"32"},{"size":1591,"mtime":1611350732746,"results":"60","hashOfConfig":"32"},{"size":5998,"mtime":1611650510890,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1ww72qn",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"64"},"/Users/zakariasalogo/Desktop/online_shopping_client/src/index.js",[],["129","130"],"/Users/zakariasalogo/Desktop/online_shopping_client/src/App.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/Routes.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/user/Signup.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/user/Signin.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Home.js",["131"],"/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Menu.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Layout.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/config.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/auth/index.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/user/UserDashboard.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/auth/PrivateRoute.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/auth/AdminRoute.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/user/AdminDashboard.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/admin/AddCategory.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/admin/apiAdmin.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/admin/AddProduct.js",["132","133","134","135"],"import React, { useState, useEffect } from 'react';\nimport Layout from '../core/Layout';\nimport { isAuthenticated } from '../auth';\nimport { Link } from 'react-router-dom';\nimport { createProduct, getCategories } from './apiAdmin';\n\nconst AddProduct = () => {\n    const [values, setValues] = useState({\n        name: '',\n        description: '',\n        price: '',\n        categories: [],\n        category: '',\n        shipping: '',\n        quantity: '',\n        photo: '',\n        loading: false,\n        error: '',\n        createdProduct: '',\n        redirectToProfile: false,\n        formData: ''\n    });\n\n    const { user, token } = isAuthenticated();\n    const {\n        name,\n        description,\n        price,\n       categories,\n        category,\n        shipping,\n        quantity,\n        loading,\n        error,\n        createdProduct,\n        redirectToProfile,\n        formData\n    } = values;\n\n    // load categories and set form data\n    const init = () => {\n        getCategories().then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                setValues({\n                    ...values,\n                    categories: data,\n                    formData: new FormData()\n                });\n            }\n        });\n    };\n\n    useEffect(() => {\n        init();\n    },[])\n\n    const handleChange = name => event => {\n        const value = name === 'photo' ? event.target.files[0] : event.target.value;\n        formData.set(name, value);\n        setValues({ ...values, [name]: value });\n    };\n\n    const clickSubmit = event => {\n        event.preventDefault();\n        setValues({ ...values, error: '', loading: true });\n\n        createProduct(user._id, token, formData).then(data => {\n            if (data.error) {\n                 setValues({ ...values, error: data.error });\n            } else {\n                   setValues({\n                    ...values,\n                    name: '',\n                    description: '',\n                    photo: '',\n                    price: '',\n                    quantity: '',\n                    loading: false,\n                    createdProduct: data.name\n                });\n            }\n        });\n    };\n\n    const newPostForm = () => (\n        <form className=\"mb-3\" onSubmit={clickSubmit}>\n            <h4>Post Photo</h4>\n            <div className=\"form-group\">\n                <label className=\"btn btn-secondary\">\n                    <input onChange={handleChange('photo')} type=\"file\" name=\"photo\" accept=\"image/*\" />\n                </label>\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Name</label>\n                <input onChange={handleChange('name')} type=\"text\" className=\"form-control\" value={name} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Description</label>\n                <textarea onChange={handleChange('description')} className=\"form-control\" value={description} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Price</label>\n                <input onChange={handleChange('price')} type=\"number\" className=\"form-control\" value={price} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Category</label>\n                <select onChange={handleChange('category')} className=\"form-control\">\n                    <option>Please select </option>\n                     {categories && categories.map((c,i)=>(\n                         <option key={i} value={c._id} >{c.name}</option>\n                     ))}\n                    \n                </select>\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Shipping</label>\n                <select onChange={handleChange('shipping')} className=\"form-control\">\n                    <option>Please select</option>\n                    <option value=\"0\">No</option>\n                    <option value=\"1\">Yes</option>\n                </select>\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Quantity</label>\n                <input onChange={handleChange('quantity')} type=\"number\" className=\"form-control\" value={quantity} />\n            </div>\n\n            <button className=\"btn btn-outline-primary\">Create Product</button>\n        </form>\n    );\n\n    const goBack = () => (\n        <div className=\"mt-5\">\n             <Link to=\"/admin/dashboard\" className=\"text-warning\">Back to Dashboard</Link>\n        </div>\n    );\n\n    const showError = () => (\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\n            {error}\n        </div>\n    );\n\n    const showSuccess = () => (\n        <div className=\"alert alert-info\" style={{ display: createdProduct ? '' : 'none' }}>\n            <h2>{`${createdProduct}`} is created!</h2>\n        </div>\n    );\n\n    const showLoading = () =>\n        loading && (\n            <div className=\"alert alert-success\">\n                <h2>Loading...</h2>\n            </div>\n        );\n\n    return (\n        <Layout title=\"Add a new product\" description={`Hello ${user.name}`}>\n            <div className=\"row\">\n                <div className=\"col-md-8 offset-md-2\">\n                    {showLoading()}\n                    {showSuccess()}\n                    {showError()}\n                    {newPostForm()}\n                    {goBack()}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default AddProduct;\n","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/apiCore.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Card.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/core/ShowImage.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Shop.js",["136","137","138"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"./Layout\";\nimport Card from \"./Card\";\nimport { getCategories, getFilteredProducts } from \"./apiCore\";\nimport Checkbox from \"./Checkbox\";\nimport RadioBox from \"./RadioBox\";\nimport { prices } from \"./fixedPrices\";\nimport Scroll from \"./Scroll\";\n\n\n\nconst Shop = () => {\n    const [myFilters, setMyFilters] = useState({\n        filters: { category: [], price: [] }\n    });\n    const [categories, setCategories] = useState([]);\n    const [error, setError] = useState(false);\n    const [limit, setLimit] = useState(6);\n    const [skip, setSkip] = useState(0);\n    const [size, setSize] = useState(0);\n    const [filteredResults, setFilteredResults] = useState([]);\n\n    const init = () => {\n        getCategories().then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setCategories(data);\n            }\n        });\n    };\n\n    const loadFilteredResults = newFilters => {\n        // console.log(newFilters);\n        getFilteredProducts(skip, limit, newFilters).then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setFilteredResults(data.data);\n                setSize(data.size);\n                setSkip(0);\n            }\n        });\n    };\n\n    const loadMore = () => {\n        let toSkip = skip + limit;\n        // console.log(newFilters);\n        getFilteredProducts(toSkip, limit, myFilters.filters).then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setFilteredResults([...filteredResults, ...data.data]);\n                setSize(data.size);\n                setSkip(toSkip);\n            }\n        });\n    };\n\n\n    const loadMoreButton = () => {\n        return (\n            size > 0 && size >= limit && (\n                <button onClick={loadMore} className=\"btn btn-warning mb-5\">\n                    Load more\n                </button>\n            )\n        )\n    };\n\n\n    useEffect(() => {\n        init();\n        loadFilteredResults(skip, limit, myFilters.filters);\n    }, []);\n\n    const handleFilters = (filters, filterBy) => {\n        // console.log(\"SHOP\", filters, filterBy);\n        const newFilters = { ...myFilters };\n        newFilters.filters[filterBy] = filters;\n\n        if (filterBy === \"price\") {\n            let priceValues = handlePrice(filters);\n            newFilters.filters[filterBy] = priceValues;\n        }\n        loadFilteredResults(myFilters.filters);\n        setMyFilters(newFilters);\n    };\n\n    const handlePrice = value => {\n        const data = prices;\n        let array = [];\n\n        for (let key in data) {\n            if (data[key]._id === parseInt(value)) {\n                array = data[key].array;\n            }\n        }\n        return array;\n    };\n\n    return (\n        <Layout\n            title=\"Shop Page\"\n            description=\"\"\n            className=\"container-fluid\"\n        >\n        \n        <Scroll>\n\n            <div className=\"row\">\n                <div className=\"col-4\">\n                    <h4>Filter by categories</h4>\n                    <ul>\n                    \n                        <Checkbox\n                            categories={categories}\n                            handleFilters={filters =>\n                                handleFilters(filters, \"category\")\n                            }\n                        />                  \n                    </ul>\n\n                    <h4>Filter by price range</h4>\n                    <div>\n                        <RadioBox\n                            prices={prices}\n                            handleFilters={filters =>\n                                handleFilters(filters, \"price\")\n                            }\n                        />\n                    </div>\n                </div>                 \n\n                <div className=\"col-8\">\n                    <h2 className=\"mb-4\">Products</h2>\n                    <div className=\"row\">\n                        {filteredResults.map((product, i) => (\n                            <div key={i} className=\"col-6 mb-3\">\n                                <Card product={product} />\n                            </div>\n                        ))}\n                    </div>\n                    <hr />\n                    {loadMoreButton()}\n\n                </div>\n            </div>\n\n            </Scroll>\n        </Layout>\n    );\n};\n\nexport default Shop;","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Checkbox.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/core/fixedPrices.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/core/RadioBox.js",["139"],"//import { Fragment } from \"react\";\nimport React, { useState,/* useEffect */} from \"react\";\n\n\nconst RadioBox = ({ prices, handleFilters }) => {\n     const [ value, setValue ] = useState(0);\n      \n     const handleChange = (event) => {\n         handleFilters(event.target.value)\n         setValue(event.target.value)\n     };\n\n     return prices.map((p, i) => (\n        <div  key={i}>\n            <input onChange={handleChange} \n            value={`${p._id}`} \n            name={p}\n            type=\"radio\"\n             className=\"mr-2 ml-4\" \n             />\n            <label className=\"form-check-label\">{p.name}</label>\n        </div>\n    ));\n};\n\nexport default RadioBox;","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Search.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Product.js",["140"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"./Layout\";\nimport { read, listRelated } from \"./apiCore\";\nimport Card from \"./Card\";\n\n\nconst Product = (props) => {\n    const [product, setProduct] = useState({});\n    const [relatedProduct, setRelatedProduct] = useState([]);\n    const [error, setError] = useState(false);\n\n    const loadSingleProduct = productId => {\n        read(productId).then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setProduct(data);\n                // fetch related products\n                listRelated(data._id).then(data => {\n                    if (data.error) {\n                        setError(data.error)\n                    } else {\n                        setRelatedProduct(data);\n                    }\n                })\n            }\n        })\n    }\n\n    useEffect(() => {\n        const productId = props.match.params.productId // from the URL\n        loadSingleProduct(productId)\n    }, [props])// [props] mean anytime there a change useEffect will update the state\n\n\n    return (\n        <Layout\n            title={product && product.name}\n            description={\n                product &&\n                product.description &&\n                product.description.substring(0, 100)}\n            className=\"container-fluid\"\n        >\n\n            <div className=\"row\">\n                <div className=\"col-8\">\n                    {product && product.description && (\n                        <Card product={product} showViewProductButton={false} />\n                    )}\n                </div>\n                <div className=\"col-4\">\n                    <h4>Related products</h4>\n                    {relatedProduct.map((p, i) => (\n                        <div className=\"mb-3\">\n                            <Card key={i} product={p} />\n                        </div>\n                    ))}\n                </div>\n\n            </div>\n\n        </Layout>\n    )\n}\n\nexport default Product;","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/cartHelpers.js",["141","142"],"export const addItem = (item = [], count = 0, next = f => f) => {\n    let cart = [];\n    if (typeof window !== 'undefined') {\n        if (localStorage.getItem('cart')) {\n            cart = JSON.parse(localStorage.getItem('cart'));\n        }\n        cart.push({\n            ...item,\n            count: 1\n        });\n\n        // remove duplicates\n        // build an Array from new Set and turn it back into array using Array.from\n        // so that later we can re-map it\n        // new set will only allow unique values in it\n        // so pass the ids of each object/product\n        // If the loop tries to add the same value again, it'll get ignored\n        // ...with the array of ids we got on when first map() was used\n        // run map() on it again and return the actual product from the cart\n\n        cart = Array.from(new Set(cart.map(p => p._id))).map(id => {\n            return cart.find(p => p._id === id);\n        });\n\n        localStorage.setItem('cart', JSON.stringify(cart));\n        next();\n    }\n};\n\nexport const itemTotal = () => {\n    if (typeof window !== \"undefined\") {\n        if (localStorage.getItem(\"cart\")) {\n            return JSON.parse(localStorage.getItem(\"cart\")).length;\n        }\n    }\n    return 0;\n};\n\nexport const getCart = () => {\n    if (typeof window !== \"undefined\") {\n        if (localStorage.getItem(\"cart\")) {\n            return JSON.parse(localStorage.getItem(\"cart\"));\n        }\n    }\n    return [];// if we don't get any item we return empty array\n};\n\n\nexport const updateItem = (productId, count) => {\n    let cart = [];\n    if (typeof window !== 'undefined') {\n        if (localStorage.getItem('cart')) {\n            cart = JSON.parse(localStorage.getItem('cart'));\n        }\n\n        cart.map((product, i) => {\n            if (product._id === productId) {\n                cart[i].count = count;\n            }\n        });\n\n        localStorage.setItem('cart', JSON.stringify(cart));\n    }\n};\n\n\nexport const removeItem = (productId) => {\n    let cart = [];\n    if (typeof window !== 'undefined') {\n        if (localStorage.getItem('cart')) {\n            cart = JSON.parse(localStorage.getItem('cart'));\n        }\n\n        cart.map((product, i) => {\n            if (product._id === productId) {\n                cart.splice(i, 1);// to remove 1 item off\n            }\n        });\n\n        localStorage.setItem('cart', JSON.stringify(cart));\n    }\n    return cart;\n};\n\nexport const emptyCart = next => {\n    if (typeof window !== 'undefined') {\n        localStorage.removeItem('cart');\n        window.location.reload(false);//to refrech the page\n        next();\n    }\n};","/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Scroll.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Cart.js",[],"/Users/zakariasalogo/Desktop/online_shopping_client/src/core/Checkout.js",["143","144","145","146"],"\nimport React, { useState, useEffect } from 'react';\nimport { getProducts, getBraintreeClientToken, processPayment, createOrder } from './apiCore';\nimport { emptyCart } from './cartHelpers';\nimport Card from './Card';\nimport { isAuthenticated } from '../auth';\nimport { Link } from 'react-router-dom';\nimport DropIn from 'braintree-web-drop-in-react';\n\nconst Checkout = ({ products, setRun = f => f, run = undefined }) => {\n    const [data, setData] = useState({\n        loading: false,\n        success: false,\n        clientToken: null,\n        error: '',\n        instance: {},\n        address: ''\n    });\n\n    const userId = isAuthenticated() && isAuthenticated().user._id;\n    const token = isAuthenticated() && isAuthenticated().token;\n\n    const getToken = (userId, token) => {\n        getBraintreeClientToken(userId, token).then(data => {\n            if (data.error) {\n                console.log(data.error);\n                setData({ ...data, error: data.error });\n            } else {\n                console.log(data);\n                setData({ clientToken: data.clientToken });\n            }\n        });\n    };\n\n    useEffect(() => {\n        getToken(userId, token);\n    }, []);\n\n    const handleAddress = event => {\n        setData({ ...data, address: event.target.value })\n    };\n\n    const getTotal = () => {\n        return products.reduce((currentValue, nextValue) => {\n            return currentValue + nextValue.count * nextValue.price;\n        }, 0);\n    };\n\n    const showCheckout = () => {\n        return isAuthenticated() ? (\n            <div>{showDropIn()}</div>\n        ) : (\n            <Link to=\"/signin\">\n                <button className=\"btn btn-primary\">Sign in to checkout</button>\n            </Link>\n        );\n    };\n\n  \n    let deliveryAddress = data.address;\n    const buy = () => {\n        setData({ loading: true });\n        // send the nonce to your server\n        // nonce = data.instance.requestPaymentMethod()\n        let nonce;\n        let getNonce = data.instance\n            .requestPaymentMethod()\n            .then(data => {\n                // console.log(data);\n                nonce = data.nonce;\n                // once you have nonce (card type, card number) send nonce as 'paymentMethodNonce'\n                // and also total to be charged\n                // console.log(\n                //     \"send nonce and total to process: \",\n                //     nonce,\n                //     getTotal(products)\n                // );\n                const paymentData = {\n                    paymentMethodNonce: nonce,\n                    amount: getTotal(products)\n                };\n\n                processPayment(userId, token, paymentData)\n                    .then(response => {\n                        console.log(\"this is payment process \",response);\n                        // empty cart\n                        // create order\n                        const createOrderData = {\n                            products: products,\n                            transaction_id: response.transaction.id,\n                            amount: response.transaction.amount,\n                            address: deliveryAddress\n                        };\n\n                        createOrder(userId, token, createOrderData)\n                            .then(response => {\n                                emptyCart(() => {\n                                    setRun(!run); // run useEffect in parent Cart\n                                    console.log('payment success and empty cart');\n                                    setData({\n                                        loading: false,\n                                        success: true\n                                        \n                                    });\n                                });\n                            })\n                         \n                    })\n                   \n            })\n            .catch(error => {\n                // console.log(\"dropin error: \", error);\n                setData({ ...data, error: error.message });\n            });\n    };\n\n    const showDropIn = () => (\n        <div onBlur={() => setData({ ...data, error: '' })}>\n            {data.clientToken !== null && products.length > 0 ? (\n                <div>\n                    <div className=\"gorm-group mb-3\">\n                        <label className=\"text-muted\">Delivery address:</label>\n                        <textarea\n                            onChange={handleAddress}\n                            className=\"form-control\"\n                            value={data.address}\n                            placeholder=\"Type your address here...\"\n                        />\n                    </div>\n\n                    <DropIn\n                        options={{\n                            authorization: data.clientToken,\n                            paypal: {\n                                flow: 'vault'\n                            }\n                        }}\n                        onInstance={instance => (data.instance = instance)}\n                    />\n                    <button onClick={buy} className=\"btn btn-success btn-block\">\n                        Pay\n                    </button>\n                </div>\n            ) : null}\n        </div>\n    );\n\n    const showError = error => (\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\n            {error}\n        </div>\n    );\n\n    const showSuccess = success => (\n        <div className=\"alert alert-info\" style={{ display: success ? '' : 'none' }}>\n            Thanks! Your payment was successful!\n        </div>\n    );\n\n    const showLoading = loading => loading && <h2 className=\"text-danger\">Loading...</h2>;\n\n    return (\n        <div>\n            <h2>Total: ${getTotal()}</h2>\n            {showLoading(data.loading)}\n            {showSuccess(data.success)}\n            {showError(data.error)}\n            {showCheckout()}\n        </div>\n    );\n};\n\nexport default Checkout;\n\n\n\n",{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":12,"column":12,"nodeType":"153","messageId":"154","endLine":12,"endColumn":17},{"ruleId":"151","severity":1,"message":"155","line":30,"column":9,"nodeType":"153","messageId":"154","endLine":30,"endColumn":17},{"ruleId":"151","severity":1,"message":"156","line":31,"column":9,"nodeType":"153","messageId":"154","endLine":31,"endColumn":17},{"ruleId":"151","severity":1,"message":"157","line":36,"column":9,"nodeType":"153","messageId":"154","endLine":36,"endColumn":26},{"ruleId":"158","severity":1,"message":"159","line":57,"column":7,"nodeType":"160","endLine":57,"endColumn":9,"suggestions":"161"},{"ruleId":"151","severity":1,"message":"152","line":17,"column":12,"nodeType":"153","messageId":"154","endLine":17,"endColumn":17},{"ruleId":"151","severity":1,"message":"162","line":18,"column":19,"nodeType":"153","messageId":"154","endLine":18,"endColumn":27},{"ruleId":"158","severity":1,"message":"163","line":75,"column":8,"nodeType":"160","endLine":75,"endColumn":10,"suggestions":"164"},{"ruleId":"151","severity":1,"message":"165","line":6,"column":14,"nodeType":"153","messageId":"154","endLine":6,"endColumn":19},{"ruleId":"151","severity":1,"message":"152","line":10,"column":12,"nodeType":"153","messageId":"154","endLine":10,"endColumn":17},{"ruleId":"166","severity":1,"message":"167","line":56,"column":31,"nodeType":"168","messageId":"169","endLine":56,"endColumn":33},{"ruleId":"166","severity":1,"message":"167","line":74,"column":31,"nodeType":"168","messageId":"169","endLine":74,"endColumn":33},{"ruleId":"151","severity":1,"message":"170","line":3,"column":10,"nodeType":"153","messageId":"154","endLine":3,"endColumn":21},{"ruleId":"151","severity":1,"message":"171","line":5,"column":8,"nodeType":"153","messageId":"154","endLine":5,"endColumn":12},{"ruleId":"158","severity":1,"message":"172","line":37,"column":8,"nodeType":"160","endLine":37,"endColumn":10,"suggestions":"173"},{"ruleId":"151","severity":1,"message":"174","line":66,"column":13,"nodeType":"153","messageId":"154","endLine":66,"endColumn":21},"no-native-reassign",["175"],"no-negated-in-lhs",["176"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'category' is assigned a value but never used.","'shipping' is assigned a value but never used.","'redirectToProfile' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.","ArrayExpression",["177"],"'setLimit' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'limit', 'loadFilteredResults', 'myFilters.filters', and 'skip'. Either include them or remove the dependency array.",["178"],"'value' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'getProducts' is defined but never used.","'Card' is defined but never used.","React Hook useEffect has missing dependencies: 'token' and 'userId'. Either include them or remove the dependency array.",["179"],"'getNonce' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},"Update the dependencies array to be: [init]",{"range":"186","text":"187"},"Update the dependencies array to be: [limit, loadFilteredResults, myFilters.filters, skip]",{"range":"188","text":"189"},"Update the dependencies array to be: [token, userId]",{"range":"190","text":"191"},[1365,1367],"[init]",[2151,2153],"[limit, loadFilteredResults, myFilters.filters, skip]",[1185,1187],"[token, userId]"]